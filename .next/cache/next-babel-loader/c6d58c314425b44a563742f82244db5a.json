{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\";\nimport ActivityHeader from '../../../components/activity-header';\nimport { ACTIVITY_GROUPS } from '../../../constant/api';\nimport { get } from '../../../api/API';\nimport Grid from '@material-ui/core/Grid';\nimport ActivityPopup from '../../../components/activity-popup';\nimport styles from './styles';\nimport CardItems from './todo-items';\nimport TodoPopup from './todo-popup';\nvar useStyles = makeStyles(styles);\n\nvar DetailActivity = function DetailActivity() {\n  _s();\n\n  var cs = useStyles();\n  var router = useRouter();\n\n  var _useState = useState({\n    title: ''\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      addTodoDialog = _useState3[0],\n      setTodoDialog = _useState3[1];\n\n  var _useState4 = useState(false),\n      editActivityDialog = _useState4[0],\n      setEditActivityDialog = _useState4[1];\n\n  var fetchDataById = function fetchDataById() {\n    var _router$query;\n\n    var url = ACTIVITY_GROUPS + \"/\".concat((_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id);\n\n    var onFetch = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var responses;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return get(url);\n\n              case 3:\n                responses = _context.sent;\n                setData({\n                  title: responses === null || responses === void 0 ? void 0 : responses.title\n                });\n                setLoading(false);\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                setLoading(true);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function onFetch() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    onFetch();\n  };\n\n  useEffect(fetchDataById, []);\n\n  var renderChildDialog = function renderChildDialog() {\n    if (addTodoDialog) return /*#__PURE__*/_jsxDEV(TodoPopup, {\n      title: \"Tambah List Item\",\n      openDialog: addTodoDialog,\n      setOpenDialog: setTodoDialog,\n      onRefetch: console.log\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this);\n    if (editActivityDialog) return /*#__PURE__*/_jsxDEV(ActivityPopup, {\n      type: \"edit\",\n      title: \"Edit Activity\",\n      initialValues: {\n        activityName: data === null || data === void 0 ? void 0 : data.title\n      },\n      openDialog: editActivityDialog,\n      setOpenDialog: setEditActivityDialog,\n      onRefetch: fetchDataById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"detailActivity\",\n    children: [/*#__PURE__*/_jsxDEV(ActivityHeader, {\n      title: (data === null || data === void 0 ? void 0 : data.title) || \"Loading...\",\n      onClick: function onClick() {\n        return setTodoDialog(true);\n      },\n      onUpdate: function onUpdate() {\n        return setEditActivityDialog(true);\n      },\n      children: renderChildDialog()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\",\n      children: /*#__PURE__*/_jsxDEV(CardItems, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DetailActivity, \"ozC/E7L3y3CZaXlC2RBokG3PLSw=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = DetailActivity;\nexport default DetailActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailActivity\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx"],"names":["React","useEffect","useState","makeStyles","useRouter","ActivityHeader","ACTIVITY_GROUPS","get","Grid","ActivityPopup","styles","CardItems","TodoPopup","useStyles","DetailActivity","cs","router","title","data","setData","loading","setLoading","addTodoDialog","setTodoDialog","editActivityDialog","setEditActivityDialog","fetchDataById","url","query","id","onFetch","responses","console","error","renderChildDialog","log","activityName"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\"\nimport ActivityHeader from '../../../components/activity-header';\nimport { ACTIVITY_GROUPS } from '../../../constant/api';\nimport { get } from '../../../api/API';\nimport Grid from '@material-ui/core/Grid';\nimport ActivityPopup from '../../../components/activity-popup';\nimport styles from './styles'\nimport CardItems from './todo-items';\nimport TodoPopup from './todo-popup';\n\nconst useStyles = makeStyles(styles)\n\nconst DetailActivity = () => {\n  const cs = useStyles()\n  const router = useRouter()\n\n  const [data, setData] = useState({ title: '' })\n  const [loading, setLoading] = useState(false);\n  const [addTodoDialog, setTodoDialog] = useState(false);\n  const [editActivityDialog, setEditActivityDialog] = useState(false);\n\n  const fetchDataById = () => {\n    const url = ACTIVITY_GROUPS + `/${router.query?.id}`\n\n    const onFetch = async () => {\n      try {\n        const responses = await get(url)\n        setData({\n          title: responses?.title\n        })\n        setLoading(false)\n\n      } catch (error) {\n        console.error(error)\n        setLoading(true)\n      }\n    }\n\n    onFetch()\n  }\n\n  useEffect(fetchDataById, []);\n\n\n  const renderChildDialog = () => {\n    if (addTodoDialog) return (\n      <TodoPopup\n        title=\"Tambah List Item\"\n        openDialog={addTodoDialog}\n        setOpenDialog={setTodoDialog}\n        onRefetch={console.log}\n      />\n    )\n\n    if (editActivityDialog) return (\n      <ActivityPopup\n        type=\"edit\"\n        title=\"Edit Activity\"\n        initialValues={{ activityName: data?.title }}\n        openDialog={editActivityDialog}\n        setOpenDialog={setEditActivityDialog}\n        onRefetch={fetchDataById}\n      />\n    )\n\n    return <React.Fragment />\n  }\n\n\n  return (\n    <div role=\"detailActivity\">\n      <ActivityHeader\n        title={data?.title || \"Loading...\"}\n        onClick={() => setTodoDialog(true)}\n        onUpdate={() => setEditActivityDialog(true)}\n        children={renderChildDialog()}\n      />\n\n      <Grid container spacing={3} alignItems=\"stretch\">\n        <CardItems />\n      </Grid>\n    </div>\n  )\n}\n\nexport default DetailActivity"]},"metadata":{},"sourceType":"module"}