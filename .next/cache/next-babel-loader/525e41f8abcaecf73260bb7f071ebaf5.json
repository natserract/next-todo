{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { addTodo, setTodo, deleteTodo } from '../store/actions/todos';\nimport { addUser } from '../store/actions/dataUser';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport styles from './styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from 'next/router';\nimport { generateRandomNum, removeSpaceToLower } from '../utils/utils';\nimport ActivityHeader from '../components/activity-header';\nvar validationSchema = yup.object({\n  name: yup.string().required('Name is required')\n});\nvar useStyles = makeStyles(styles);\n\nvar Home = function Home(props) {\n  _s();\n\n  var classes = useStyles();\n  var routeConfig = useRouter();\n  var formik = useFormik({\n    initialValues: {\n      name: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      var randomId = 0;\n      var name = '';\n      randomId = generateRandomNum();\n      name = removeSpaceToLower(values.name);\n      props.addUser(randomId, name); // Create Initial state for todos\n      // props.addTodo(NaN, name, {})\n\n      routeConfig.push(\"todos/\".concat(name));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"activity\",\n      children: /*#__PURE__*/_jsxDEV(ActivityHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"EBXLnrZSkL2d6QLcSqRGeD6aTBA=\", false, function () {\n  return [useStyles, useRouter, useFormik];\n});\n\n_c = Home;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos,\n    dataUser: state.dataUser\n  };\n};\n\nvar mapDispatchToProps = {\n  addTodo: addTodo,\n  setTodo: setTodo,\n  deleteTodo: deleteTodo,\n  addUser: addUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/index.tsx"],"names":["connect","addTodo","setTodo","deleteTodo","addUser","yup","useFormik","styles","makeStyles","useRouter","generateRandomNum","removeSpaceToLower","ActivityHeader","validationSchema","object","name","string","required","useStyles","Home","props","classes","routeConfig","formik","initialValues","onSubmit","values","randomId","push","container","mapStateToProps","state","todos","dataUser","mapDispatchToProps"],"mappings":";;;;;;AACA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAAkBC,OAAlB,EAAoCC,OAApC,EAAyDC,UAAzD,QAA2E,wBAA3E;AACA,SAAkBC,OAAlB,QAAiC,2BAAjC;AAIA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAGA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,gBAAtD;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAgBA,IAAMC,gBAAgB,GAAGR,GAAG,CAACS,MAAJ,CAAW;AAClCC,EAAAA,IAAI,EAAEV,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB;AAD4B,CAAX,CAAzB;AAIA,IAAMC,SAAS,GAAGV,UAAU,CAACD,MAAD,CAA5B;;AAEA,IAAMY,IAAyB,GAAG,SAA5BA,IAA4B,CAACC,KAAD,EAAW;AAAA;;AAC3C,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,MAAMI,WAAW,GAAGb,SAAS,EAA7B;AAEA,MAAMc,MAAM,GAAGjB,SAAS,CAAC;AACvBkB,IAAAA,aAAa,EAAE;AACbT,MAAAA,IAAI,EAAE;AADO,KADQ;AAIvBF,IAAAA,gBAAgB,EAAEA,gBAJK;AAKvBY,IAAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AACpB,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIZ,IAAI,GAAG,EAAX;AACAY,MAAAA,QAAQ,GAAGjB,iBAAiB,EAA5B;AACAK,MAAAA,IAAI,GAAGJ,kBAAkB,CAACe,MAAM,CAACX,IAAR,CAAzB;AAEAK,MAAAA,KAAK,CAAChB,OAAN,CAAcuB,QAAd,EAAwBZ,IAAxB,EANoB,CAQpB;AACA;;AAEAO,MAAAA,WAAW,CAACM,IAAZ,iBAA0Bb,IAA1B;AACD;AAjBsB,GAAD,CAAxB;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAEM,OAAO,CAACQ,SAAxB;AAAA,2BACE;AAAK,MAAA,IAAI,EAAC,UAAV;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CA/BD;;GAAMV,I;UACYD,S,EACIT,S,EAELH,S;;;KAJXa,I;;AAiCN,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAqB;AAC3C,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELC,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AAFX,GAAP;AAID,CALD;;AAOA,IAAMC,kBAAkB,GAAG;AACzBjC,EAAAA,OAAO,EAAPA,OADyB;AAEzBC,EAAAA,OAAO,EAAPA,OAFyB;AAGzBC,EAAAA,UAAU,EAAVA,UAHyB;AAIzBC,EAAAA,OAAO,EAAPA;AAJyB,CAA3B;AAQA,eAAeJ,OAAO,CAAC8B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,IAA7C,CAAf","sourcesContent":["import { ActionCreator } from 'redux';\nimport { connect } from 'react-redux';\nimport { TodosState } from '../store/reducers/todos/State';\nimport { AddTodo, addTodo, SetTodo, setTodo, DeleteTodo, deleteTodo } from '../store/actions/todos';\nimport { AddUser, addUser } from '../store/actions/dataUser';\nimport { AppState } from '../store/reducers';\nimport { useEffect } from 'react';\nimport { UserState } from '../store/reducers/dataUser/State';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './styles'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport { useRouter } from 'next/router';\nimport { generateRandomNum, removeSpaceToLower } from '../utils/utils';\nimport ActivityHeader from '../components/activity-header'\n\ntype PropsFromState = {\n  todos: TodosState;\n  dataUser: UserState\n};\n\ntype PropsFromDispatch = {\n  addUser: ActionCreator<AddUser>;\n  addTodo: ActionCreator<AddTodo>;\n  setTodo: ActionCreator<SetTodo>,\n  deleteTodo: ActionCreator<DeleteTodo>\n};\n\ntype HomeProps = {} & PropsFromState & PropsFromDispatch\n\nconst validationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n});\n\nconst useStyles = makeStyles(styles)\n\nconst Home: React.FC<HomeProps> = (props) => {\n  const classes = useStyles()\n  const routeConfig = useRouter();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      let randomId = 0\n      let name = ''\n      randomId = generateRandomNum()\n      name = removeSpaceToLower(values.name)\n\n      props.addUser(randomId, name)\n       \n      // Create Initial state for todos\n      // props.addTodo(NaN, name, {})\n      \n      routeConfig.push(`todos/${name}`)\n    },\n  });\n\n  return (\n    <div className={classes.container}>\n      <div role=\"activity\">\n        <ActivityHeader />\n      </div>\n    </div >\n  );\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    todos: state.todos,\n    dataUser: state.dataUser\n  };\n};\n\nconst mapDispatchToProps = {\n  addTodo,\n  setTodo,\n  deleteTodo,\n  addUser,\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}