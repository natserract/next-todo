{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/components/activity-header/popup.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport { ACTIVITY_GROUPS } from '../../constant/api';\nimport { post } from '../../api/API';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useRefetch } from '../../hooks/useRefetch';\nvar validationSchema = yup.object({\n  activityName: yup.string().required()\n});\nvar useStyles = makeStyles(styles);\n\nvar ActivityPopup = function ActivityPopup(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useRefetch = useRefetch(),\n      setDoRefetch = _useRefetch.setDoRefetch;\n\n  var formik = useFormik({\n    initialValues: {\n      activityName: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      var activityName = values.activityName;\n      console.log('submitted', activityName);\n      handlePostData(activityName);\n    }\n  });\n  var handlePostData = useCallback(function (title) {\n    var url = ACTIVITY_GROUPS;\n    var dataManual = {\n      email: \"notfound@gmail.com\",\n      comment: \"Comment confirmed!\"\n    };\n\n    var onPost = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return post(url, _objectSpread({\n                  title: title\n                }, dataManual));\n\n              case 3:\n                setLoading(false);\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                setLoading(true);\n\n              case 9:\n                _context.prev = 9;\n                handleClose();\n                setDoRefetch(true);\n                return _context.finish(9);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 6, 9, 13]]);\n      }));\n\n      return function onPost() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    onPost();\n  }, []);\n\n  var handleClose = function handleClose() {\n    props.setOpenDialog(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    className: classes.dialog,\n    open: props.openDialog,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      className: classes.dialogTitle,\n      children: [\"Tambah Activity\", /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        className: classes.closeButton,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      className: classes.dialogContent,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"activityName\",\n            children: \"Nama Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            rows: 4,\n            name: \"activityName\",\n            placeholder: \"Tambahkan nama activity\",\n            value: formik.values.activityName,\n            variant: \"outlined\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: \"\".concat(formik.errors.activityName && formik.touched.activityName ? classes.formikErrors : null, \" \").concat(classes.activityNameInput),\n            autoComplete: \"off\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: function onClick() {\n          return formik.handleSubmit();\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 23\n        }, _this), \" Simpan\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActivityPopup, \"/5Bhw2TGCsxFWFOreq1C2CEFgvM=\", false, function () {\n  return [useStyles, useRefetch, useFormik];\n});\n\n_c = ActivityPopup;\nexport default ActivityPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityPopup\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/components/activity-header/popup.tsx"],"names":["React","useCallback","useState","makeStyles","TextField","Dialog","Button","styles","DialogTitle","DialogContent","DialogActions","IconButton","CloseIcon","yup","useFormik","ACTIVITY_GROUPS","post","CircularProgress","useRefetch","validationSchema","object","activityName","string","required","useStyles","ActivityPopup","props","classes","loading","setLoading","setDoRefetch","formik","initialValues","onSubmit","values","console","log","handlePostData","title","url","dataManual","email","comment","onPost","handleClose","setOpenDialog","dialog","openDialog","dialogTitle","closeButton","dialogContent","handleSubmit","formGroup","handleChange","handleBlur","errors","touched","formikErrors","activityNameInput"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport { ACTIVITY_GROUPS } from '../../constant/api';\nimport { post } from '../../api/API'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useRefetch } from '../../hooks/useRefetch';\n\ntype Props = {\n  openDialog: boolean;\n  setOpenDialog: Function;\n}\n\nconst validationSchema = yup.object({\n  activityName: yup.string().required(),\n});\n\nconst useStyles = makeStyles(styles);\n\nconst ActivityPopup: React.FC<Props> = (props) => {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false);\n  const { setDoRefetch } = useRefetch()\n\n  const formik = useFormik({\n    initialValues: {\n      activityName: '',\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      const { activityName } = values\n\n      console.log('submitted', activityName)\n      handlePostData(activityName)\n    },\n  })\n\n  const handlePostData = useCallback((title: string) => {\n    const url = ACTIVITY_GROUPS\n\n    const dataManual = {\n      email: \"notfound@gmail.com\",\n      comment: \"Comment confirmed!\"\n    }\n\n    const onPost = async () => {\n      try {\n        await post(url, {\n          title,\n          ...dataManual,\n        })\n        setLoading(false)\n      } \n      catch (error) {\n        setLoading(true)\n      } \n      finally {\n        handleClose()\n        setDoRefetch(true)\n      }\n    }\n\n    onPost()\n  }, [])\n\n  const handleClose = () => {\n    props.setOpenDialog(false);\n  };\n\n  return (\n    <Dialog className={classes.dialog} open={props.openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>\n        Tambah Activity\n\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.dialogContent}>\n        <form onSubmit={formik.handleSubmit}>\n          <div className={classes.formGroup}>\n            <label htmlFor=\"activityName\">Nama Activity</label>\n            <TextField\n              rows={4}\n              name=\"activityName\"\n              placeholder=\"Tambahkan nama activity\"\n              value={formik.values.activityName}\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                `${formik.errors.activityName && formik.touched.activityName ? classes.formikErrors : null} ${classes.activityNameInput}`\n              }\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n        </form>\n      </DialogContent>\n\n      <DialogActions>\n        <Button type=\"submit\" onClick={() => formik.handleSubmit()} variant=\"contained\" color=\"primary\">\n          {loading && <CircularProgress color=\"secondary\" />} Simpan\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ActivityPopup"]},"metadata":{},"sourceType":"module"}