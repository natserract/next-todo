{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-popup/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useState } from 'react';\nconst useStyles = makeStyles(styles);\nconst validationSchema = yup.object({\n  activityName: yup.string().required()\n});\n\nconst TodoPopup = props => {\n  const classes = useStyles();\n  const {\n    0: selectState,\n    1: setSelectState\n  } = useState('');\n  const formik = useFormik({\n    initialValues: _objectSpread({}, props.initialValues),\n    validationSchema,\n    onSubmit: values => {\n      const {\n        title,\n        priority\n      } = values; // handlePostData(activityName)\n    }\n  });\n\n  const handleClose = () => {\n    props.setOpenDialog(false);\n  };\n\n  const handleSelectChange = event => {\n    setSelectState(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    className: classes.dialog,\n    open: props.openDialog,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      className: classes.dialogTitle,\n      children: [\"\\\"TITLE\\\"\", /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        className: classes.closeButton,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      className: classes.dialogContent,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Nama List Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            rows: 4,\n            name: \"title\",\n            placeholder: \"Tambahkan nama list item\",\n            value: formik.values.title,\n            variant: \"outlined\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            autoFocus: true,\n            className: `${formik.errors.title && formik.touched.title ? classes.formikErrors : null} ${classes.activityNameInput}`,\n            autoComplete: \"off\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"priority\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: selectState,\n            onChange: handleSelectChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 10,\n              children: \"Ten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 20,\n              children: \"Twenty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 30,\n              children: \"Thirty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: () => formik.handleSubmit(),\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Simpan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TodoPopup;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-popup/index.tsx"],"names":["Dialog","Button","DialogTitle","DialogContent","DialogActions","makeStyles","IconButton","CloseIcon","TextField","styles","useFormik","yup","Select","MenuItem","useState","useStyles","validationSchema","object","activityName","string","required","TodoPopup","props","classes","selectState","setSelectState","formik","initialValues","onSubmit","values","title","priority","handleClose","setOpenDialog","handleSelectChange","event","target","value","dialog","openDialog","dialogTitle","closeButton","dialogContent","handleSubmit","formGroup","handleChange","handleBlur","errors","touched","formikErrors","activityNameInput"],"mappings":"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","sourcesContent":["import Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './styles'\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles(styles);\n\nconst validationSchema = yup.object({\n  activityName: yup.string().required(),\n});\n\ntype Props = {\n  openDialog: boolean;\n  title: string;\n  setOpenDialog: Function;\n  onRefetch: Function;\n  initialValues: {\n    // activity_group_id: string;\n    title: string;\n    priority: string;\n  }\n}\n\nconst TodoPopup: React.FC<Props> = (props) => {\n  const classes = useStyles()\n  const [selectState, setSelectState] = useState('');\n\n  const formik = useFormik({\n    initialValues: {\n      ...props.initialValues\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      const { title, priority } = values!!\n\n      // handlePostData(activityName)\n    },\n  })\n\n  const handleClose = () => {\n    props.setOpenDialog(false);\n  };\n\n  const handleSelectChange = (event) => {\n    setSelectState(event.target.value);\n  };\n\n  return (\n    <Dialog className={classes.dialog} open={props.openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>\n        \"TITLE\"\n\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.dialogContent}>\n        <form onSubmit={formik.handleSubmit}>\n          <div className={classes.formGroup}>\n            <label htmlFor=\"title\">Nama List Item</label>\n            <TextField\n              rows={4}\n              name=\"title\"\n              placeholder=\"Tambahkan nama list item\"\n              value={formik.values.title}\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              autoFocus\n              className={\n                `${formik.errors.title && formik.touched.title ? classes.formikErrors : null} ${classes.activityNameInput}`\n              }\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n\n          <div className={classes.formGroup}>\n            <label htmlFor=\"priority\">Priority</label>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={selectState}\n              onChange={handleSelectChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n            {/* <TextField\n              rows={4}\n              name=\"priority\"\n              placeholder=\"Tambahkan nama list item\"\n              value={formik.values.priority}\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              autoFocus\n              className={\n                `${formik.errors.priority && formik.touched.priority ? classes.formikErrors : null} ${classes.activityNameInput}`\n              }\n              autoComplete=\"off\"\n              required\n            /> */}\n          </div>\n        </form>\n      </DialogContent>\n\n      <DialogActions>\n        <Button type=\"submit\" onClick={() => formik.handleSubmit()} variant=\"contained\" color=\"primary\">\n          Simpan\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default TodoPopup"]},"metadata":{},"sourceType":"module"}