{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\";\nimport styles from './styles';\nimport ActivityHeader from '../../../components/activity-header';\nimport ActivityPopup from '../../activityPopup';\nimport { ACTIVITY_GROUPS } from '../../../constant/api';\nimport { get } from '../../../api/API';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nvar useStyles = makeStyles(styles);\n\nvar DetailActivity = function DetailActivity() {\n  _s();\n\n  var cs = useStyles();\n  var router = useRouter();\n\n  var _useState = useState({\n    title: ''\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      addActivityDialog = _useState3[0],\n      setAddActivityDialog = _useState3[1];\n\n  var _useState4 = useState(false),\n      editActivityDialog = _useState4[0],\n      setEditActivityDialog = _useState4[1];\n\n  var _useState5 = useState([{\n    id: '1',\n    name: 'Telur Ayam',\n    priority: '1'\n  }, {\n    id: '2',\n    name: 'Beras 5kg',\n    priority: '1'\n  }]),\n      items = _useState5[0],\n      setItems = _useState5[1];\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedState = _React$useState2[0],\n      setCheckedState = _React$useState2[1];\n\n  var fetchDataById = function fetchDataById() {\n    var _router$query;\n\n    var url = ACTIVITY_GROUPS + \"/\".concat((_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id);\n    var obj = {};\n\n    var onFetch = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var responses;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return get(url);\n\n              case 3:\n                responses = _context.sent;\n                setData({\n                  title: responses === null || responses === void 0 ? void 0 : responses.title\n                });\n                setLoading(false);\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                setLoading(true);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function onFetch() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    onFetch();\n  };\n\n  useEffect(fetchDataById, []);\n  useEffect(function () {\n    // Object.keys(items).map(v => {\n    //   setCheckedState({\n    //     ...checkedState,\n    //     [`checked_${items[v]?.id}`]: false\n    //   })\n    // })\n    console.log('checkedState', checkedState);\n  }, [checkedState]);\n\n  var renderChildDialog = function renderChildDialog() {\n    if (editActivityDialog) return /*#__PURE__*/_jsxDEV(ActivityPopup, {\n      type: \"edit\",\n      title: \"Edit Activity\",\n      initialValues: {\n        activityName: data === null || data === void 0 ? void 0 : data.title\n      },\n      openDialog: editActivityDialog,\n      setOpenDialog: setEditActivityDialog,\n      onRefetch: fetchDataById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, _this);\n  };\n\n  var handleCheckChange = function handleCheckChange(event) {// setCheckedState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"detailActivity\",\n    children: [/*#__PURE__*/_jsxDEV(ActivityHeader, {\n      title: (data === null || data === void 0 ? void 0 : data.title) || \"Loading...\",\n      onClick: console.log,\n      onUpdate: function onUpdate() {\n        return setEditActivityDialog(true);\n      },\n      children: renderChildDialog()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\",\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: false,\n          onChange: handleCheckChange,\n          name: \"checkedF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, _this),\n        label: \"Telur Ayam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DetailActivity, \"Q/mLSJ7L9r81gbSthxvXkV0kzD0=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = DetailActivity;\nexport default DetailActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailActivity\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx"],"names":["React","useEffect","useState","makeStyles","useRouter","styles","ActivityHeader","ActivityPopup","ACTIVITY_GROUPS","get","Grid","FormControlLabel","Checkbox","useStyles","DetailActivity","cs","router","title","data","setData","loading","setLoading","addActivityDialog","setAddActivityDialog","editActivityDialog","setEditActivityDialog","id","name","priority","items","setItems","checkedState","setCheckedState","fetchDataById","url","query","obj","onFetch","responses","console","error","log","renderChildDialog","activityName","handleCheckChange","event"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\"\nimport styles from './styles'\nimport ActivityHeader from '../../../components/activity-header';\nimport ActivityPopup from '../../activityPopup';\nimport { ACTIVITY_GROUPS } from '../../../constant/api';\nimport { get } from '../../../api/API';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles(styles)\n\nconst DetailActivity = () => {\n  const cs = useStyles()\n  const router = useRouter()\n\n  const [data, setData] = useState({ title: '' })\n  const [loading, setLoading] = useState(false);\n  const [addActivityDialog, setAddActivityDialog] = useState(false);\n  const [editActivityDialog, setEditActivityDialog] = useState(false);\n\n  const [items, setItems] = useState([\n    {\n      id: '1',\n      name: 'Telur Ayam',\n      priority: '1'\n    },\n    {\n      id: '2',\n      name: 'Beras 5kg',\n      priority: '1'\n    },\n  ])\n  const [checkedState, setCheckedState] = React.useState({});\n\n  const fetchDataById = () => {\n    const url = ACTIVITY_GROUPS + `/${router.query?.id}`\n\n    const obj = {}\n\n    const onFetch = async () => {\n      try {\n        const responses = await get(url)\n        setData({\n          title: responses?.title\n        })\n        setLoading(false)\n\n      } catch (error) {\n        console.error(error)\n        setLoading(true)\n      }\n    }\n\n    onFetch()\n\n\n  }\n\n  useEffect(fetchDataById, []);\n\n  useEffect(() => {\n    // Object.keys(items).map(v => {\n    //   setCheckedState({\n    //     ...checkedState,\n    //     [`checked_${items[v]?.id}`]: false\n    //   })\n    // })\n\n    console.log('checkedState', checkedState)\n  }, [checkedState])\n\n  const renderChildDialog = () => {\n    if (editActivityDialog) return (\n      <ActivityPopup\n        type=\"edit\"\n        title=\"Edit Activity\"\n        initialValues={{ activityName: data?.title }}\n        openDialog={editActivityDialog}\n        setOpenDialog={setEditActivityDialog}\n        onRefetch={fetchDataById}\n      />\n    )\n\n    return <React.Fragment />\n  }\n\n  const handleCheckChange = (event) => {\n    // setCheckedState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <div role=\"detailActivity\">\n      <ActivityHeader\n        title={data?.title || \"Loading...\"}\n        onClick={console.log}\n        onUpdate={() => setEditActivityDialog(true)}\n        children={renderChildDialog()}\n      />\n\n      <Grid container spacing={3} alignItems=\"stretch\">\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={false}\n              onChange={handleCheckChange}\n              name=\"checkedF\"\n            />\n          }\n          label=\"Telur Ayam\"\n        />\n      </Grid>\n    </div>\n  )\n}\n\nexport default DetailActivity"]},"metadata":{},"sourceType":"module"}