{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Axios from 'axios';\nexport var get = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(route) {\n    var config, response, responseData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config = {};\n            _context.prev = 1;\n            _context.next = 4;\n            return Axios.get(route, config);\n\n          case 4:\n            response = _context.sent;\n            responseData = response.data;\n\n            if (responseData === null) {\n              responseData = [];\n            }\n\n            if (!(responseData instanceof Object)) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", responseData);\n\n          case 11:\n            responseData = [];\n\n          case 12:\n            return _context.abrupt(\"return\", responseData);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n\n            if (!Axios.isCancel(_context.t0)) {\n              _context.next = 19;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 19:\n            return _context.abrupt(\"return\", Promise.reject({\n              status: _context.t0.response.status,\n              what: _context.t0.response.statusText\n            }));\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 15]]);\n  }));\n\n  return function get(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getAll = function getAll(values) {\n  return Axios.all(values).then(Axios.spread(function () {\n    for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n      responses[_key] = arguments[_key];\n    }\n\n    return responses;\n  }));\n};\nexport var post = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(route) {\n    var data,\n        response,\n        responseData,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n            _context2.prev = 1;\n            _context2.next = 4;\n            return Axios.post(route, data);\n\n          case 4:\n            response = _context2.sent;\n            responseData = response.data;\n\n            if (responseData === null) {\n              responseData = [];\n            }\n\n            if (!(responseData instanceof Object)) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", responseData);\n\n          case 11:\n            responseData = [];\n\n          case 12:\n            return _context2.abrupt(\"return\", responseData);\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](1);\n\n            if (!Axios.isCancel(_context2.t0)) {\n              _context2.next = 19;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 19:\n            return _context2.abrupt(\"return\", Promise.reject({\n              status: _context2.t0.response.status,\n              what: _context2.t0.response.statusText\n            }));\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 15]]);\n  }));\n\n  return function post(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var remove = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(route) {\n    var config, response, responseData;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            config = {};\n            _context3.prev = 1;\n            _context3.next = 4;\n            return Axios[\"delete\"](route, config);\n\n          case 4:\n            response = _context3.sent;\n            responseData = response.data;\n\n            if (responseData === null) {\n              responseData = [];\n            }\n\n            if (!(responseData instanceof Object)) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", responseData);\n\n          case 11:\n            responseData = [];\n\n          case 12:\n            return _context3.abrupt(\"return\", responseData);\n\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](1);\n\n            if (!Axios.isCancel(_context3.t0)) {\n              _context3.next = 19;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 19:\n            return _context3.abrupt(\"return\", Promise.reject({\n              status: _context3.t0.response.status,\n              what: _context3.t0.response.statusText\n            }));\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 15]]);\n  }));\n\n  return function remove(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/api/API.ts"],"names":["Axios","get","route","config","response","responseData","data","Object","isCancel","Promise","reject","status","what","statusText","getAll","values","all","then","spread","responses","post","remove"],"mappings":"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","sourcesContent":["import Axios, { AxiosError, AxiosRequestConfig } from 'axios'\n\nexport const get = async (route: string) => {\n  const config = {}\n\n  try {\n    const response = await Axios.get(route, config);\n    let responseData = response.data;\n\n    if (responseData === null) {\n      responseData = [];\n    }\n\n    if (responseData instanceof Object) {\n      return responseData;\n    } else {\n      responseData = [];\n    }\n    return responseData;\n  } catch (error) {\n    if (Axios.isCancel(error)) {\n      // console.log('Request canceled: ', error.message);\n      return;\n    }\n    return Promise.reject({\n      status: error.response!!.status,\n      what: error.response!!.statusText,\n    });\n  }\n}\n\nexport const getAll = <T>(values: (T | Promise<T>)[]) => {\n  return Axios.all(values)\n    .then(Axios.spread((...responses) => {\n      return responses\n    }))\n}\n\nexport const post = async (route: string, data = {}) => {\n  try {\n    const response = await Axios.post(route, data);\n    let responseData = response.data;\n\n    if (responseData === null) {\n      responseData = [];\n    }\n\n    if (responseData instanceof Object) {\n      return responseData;\n    } else {\n      responseData = [];\n    }\n    return responseData;\n  } catch (error) {\n    if (Axios.isCancel(error)) {\n      // console.log('Request canceled: ', error.message);\n      return;\n    }\n    return Promise.reject({\n      status: error.response!!.status,\n      what: error.response!!.statusText,\n    });\n  }\n}\n\nexport const remove = async (route: string) => {\n  const config = {}\n\n  try {\n    const response = await Axios.delete(route, config)\n    let responseData = response.data;\n\n    if (responseData === null) {\n      responseData = [];\n    }\n\n    if (responseData instanceof Object) {\n      return responseData;\n    } else {\n      responseData = [];\n    }\n    return responseData;\n  } catch (error) {\n    if (Axios.isCancel(error)) {\n      // console.log('Request canceled: ', error.message);\n      return;\n    }\n    return Promise.reject({\n      status: error.response!!.status,\n      what: error.response!!.statusText,\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}