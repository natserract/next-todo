{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport EmptyItems from '../../../../components/empty-items';\nvar useStyles = makeStyles(styles);\n\nvar CardItems = function CardItems(props) {\n  _s();\n\n  var cs = useStyles();\n  var checkedRef = useRef({});\n\n  var _useState = useState({}),\n      checkedState = _useState[0],\n      setCheckedState = _useState[1]; // Create initial state for checkBox\n\n\n  useEffect(function () {\n    Object.keys(props.items).map(function (v) {\n      checkedRef.current[\"checked_\".concat(props.items[v].id)] = props.items[v]['is_active'] === '0';\n    });\n    setCheckedState(_objectSpread({}, checkedRef.current));\n  }, [props.items]);\n\n  var handleCheckChange = function handleCheckChange(event) {\n    setCheckedState(_objectSpread(_objectSpread({}, checkedState), {}, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n\n  var handleDelete = function handleDelete() {};\n\n  var renderItems = function renderItems() {\n    if (props.itemEmpty) return /*#__PURE__*/_jsxDEV(EmptyItems, {\n      path: \"../todo-empty-state.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }, _this);\n    return props.items.map(function (v, idx) {\n      var key = \"checked_\".concat(v.id);\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: cs.root,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"priority\",\n            className: cs.prior,\n            style: {\n              background: mappingColorPriority(v.priority)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: cs.formLabel,\n            control:\n            /*#__PURE__*/\n            // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n            // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n            _jsxDEV(Checkbox, {\n              color: \"primary\",\n              checked: !!checkedState[key],\n              onChange: handleCheckChange,\n              name: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, _this),\n            label: v.title\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleDelete,\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: renderItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(CardItems, \"+LDmMEmNQVWGtSdtrXKS0kPpiR4=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardItems;\nexport default CardItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardItems\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx"],"names":["useState","useRef","useEffect","makeStyles","Card","FormControlLabel","Checkbox","styles","React","Grid","IconButton","DeleteOutlineIcon","mappingColorPriority","EmptyItems","useStyles","CardItems","props","cs","checkedRef","checkedState","setCheckedState","Object","keys","items","map","v","current","id","handleCheckChange","event","target","name","checked","handleDelete","renderItems","itemEmpty","idx","key","root","prior","background","priority","formLabel","title"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles'\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport EmptyItems from '../../../../components/empty-items';\n\ntype Props = {\n  items: Array <any>;\n  itemEmpty: boolean;\n  setItemEmpty: Function;\n}\n\nconst useStyles = makeStyles(styles)\n\nconst CardItems: React.FC<Props> = (props) => {\n  const cs = useStyles()\n  const checkedRef = useRef({})\n  const [checkedState, setCheckedState] = useState({});\n\n  // Create initial state for checkBox\n  useEffect(() => {\n    Object.keys(props.items).map(v => {\n      checkedRef.current[`checked_${props.items[v].id}`] = props.items[v]['is_active'] === '0'\n    })\n\n    setCheckedState({ ...checkedRef.current })\n  }, [props.items])\n\n  const handleCheckChange = (event) => {\n    setCheckedState({ ...checkedState, [event.target.name]: event.target.checked });\n  };\n\n  const handleDelete = () => {\n\n  }\n\n  const renderItems = () => {\n    if (props.itemEmpty) return <EmptyItems path=\"../todo-empty-state.png\" />\n\n    return props.items.map((v, idx) => {\n      const key = `checked_${v.id}`\n\n      return (\n        <Grid item sm={12} key={key}>\n          <Card className={cs.root}>\n            <span\n              role=\"priority\"\n              className={cs.prior}\n              style={{ background: mappingColorPriority(v.priority) }}\n            />\n\n            <FormControlLabel\n              className={cs.formLabel}\n              key={idx}\n              control={\n                // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n                // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n                <Checkbox\n                  color=\"primary\"\n                  checked={!!checkedState[key]}\n                  onChange={handleCheckChange}\n                  name={key}\n                />\n              }\n              label={v.title}\n            />\n\n            <IconButton onClick={handleDelete} aria-label=\"delete\">\n              <DeleteOutlineIcon />\n            </IconButton>\n          </Card>\n        </Grid>\n      )\n    })\n  }\n\n  return <React.Fragment children={renderItems()} />\n}\n\nexport default CardItems"]},"metadata":{},"sourceType":"module"}