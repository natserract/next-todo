{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport ActivityHeader from \"../components/activity-header\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { get } from '../api/API';\nvar useStyles = makeStyles({});\n\nvar Activity = function Activity() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var fetchData = useCallback(function () {\n    var url = 'https://www.postman.com/collections/b0a48bb59c1511914c46';\n    get(url).then(function (result) {\n      console.log('result', result); // const usersData = data[1]\n      // const albumsData = findsBy(data[0], usersData, ['userId'])\n      // setData({\n      //   albums: albumsData!!,\n      //   users: usersData\n      // })\n\n      setLoading(false);\n    })[\"catch\"](function (error) {\n      setLoading(true);\n    });\n  }, []);\n  useEffect(fetchData, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"activity\",\n    children: [/*#__PURE__*/_jsxDEV(ActivityHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Activity, \"GpQwd0Mkt5SAXkXBm1xybnJZBY4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Activity;\nexport default Activity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activity\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity.tsx"],"names":["React","useState","useCallback","useEffect","ActivityHeader","Grid","makeStyles","get","useStyles","Activity","classes","loading","setLoading","data","setData","fetchData","url","then","result","console","log","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,GAAT,QAAoB,YAApB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAE,EAAF,CAA5B;;AAIA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,MAAMC,OAAO,GAAGF,SAAS,EAAzB;;AADqB,kBAGSP,QAAQ,CAAC,IAAD,CAHjB;AAAA,MAGdU,OAHc;AAAA,MAGLC,UAHK;;AAAA,mBAIGX,QAAQ,CAAC,EAAD,CAJX;AAAA,MAIdY,IAJc;AAAA,MAIRC,OAJQ;;AAMrB,MAAMC,SAAS,GAAGb,WAAW,CAAC,YAAM;AAClC,QAAMc,GAAG,GAAG,0DAAZ;AAEAT,IAAAA,GAAG,CAACS,GAAD,CAAH,CACGC,IADH,CACQ,UAAAC,MAAM,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB,EADc,CAEd;AACA;AAEA;AACA;AACA;AACA;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXH,WAYS,UAACS,KAAD,EAAW;AAChBT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAdH;AAeD,GAlB4B,EAkB1B,EAlB0B,CAA7B;AAoBAT,EAAAA,SAAS,CAACY,SAAD,EAAY,EAAZ,CAAT;AAEA,sBACE;AAAK,IAAA,IAAI,EAAC,UAAV;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAGE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,UAAU,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAgBD,CA5CD;;GAAMN,Q;UACYD,S;;;KADZC,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\"\nimport ActivityCard from \"../components/activity-card\"\nimport ActivityHeader from \"../components/activity-header\"\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmptyItems from \"../components/empty-items\";\nimport { get } from '../api/API'\n\nconst useStyles = makeStyles(({\n\n}))\n\nconst Activity = () => {\n  const classes = useStyles()\n\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState([])\n\n  const fetchData = useCallback(() => {\n    const url = 'https://www.postman.com/collections/b0a48bb59c1511914c46'\n\n    get(url)\n      .then(result => {\n        console.log('result', result)\n        // const usersData = data[1]\n        // const albumsData = findsBy(data[0], usersData, ['userId'])\n\n        // setData({\n        //   albums: albumsData!!,\n        //   users: usersData\n        // })\n        setLoading(false)\n      })\n      .catch((error) => {\n        setLoading(true)\n      })\n  }, [])\n\n  useEffect(fetchData, []);\n\n  return (\n    <div role=\"activity\">\n      <ActivityHeader />\n\n      <Grid container spacing={3} alignItems=\"stretch\">\n        {/* {state && state.length ? state.map((item, index) =>\n          <Grid item xs={12} sm={3} key={`item-${item.id}-${index}`}>\n            <ActivityCard \n              title={item.title}\n              date={item.date}\n            />\n          </Grid>\n        ) : <EmptyItems type=\"activity\" />} */}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Activity"]},"metadata":{},"sourceType":"module"}