{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport ActivityCard from \"../components/activity-card\";\nimport ActivityHeader from \"../components/activity-header\";\nimport Loading from \"../components/loading\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmptyItems from \"../components/empty-items\";\nimport { get } from '../api/API';\nimport { GET_ACTIVITIES } from '../constant/api';\nimport { parseDate } from \"../utils/utils\";\nvar useStyles = makeStyles({});\n\nvar Activity = function Activity() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var fetchData = useCallback(function () {\n    var url = GET_ACTIVITIES;\n    get(url).then(function (result) {\n      setData(result === null || result === void 0 ? void 0 : result.data);\n      setLoading(false);\n    })[\"catch\"](function (error) {\n      setLoading(true);\n    });\n  }, []);\n  useEffect(fetchData, []);\n\n  var renderActivityItems = function renderActivityItems() {\n    if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, _this);\n    if (!data && !data.length) return /*#__PURE__*/_jsxDEV(EmptyItems, {\n      type: \"activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this);\n    return data.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(ActivityCard, {\n          title: item.title,\n          date: parseDate(item.created_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, _this)\n      }, \"item-\".concat(item.id, \"-\").concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"activity\",\n    children: [/*#__PURE__*/_jsxDEV(ActivityHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\",\n      children: renderActivityItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Activity, \"GpQwd0Mkt5SAXkXBm1xybnJZBY4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Activity;\nexport default Activity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activity\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity.tsx"],"names":["React","useState","useCallback","useEffect","ActivityCard","ActivityHeader","Loading","Grid","makeStyles","EmptyItems","get","GET_ACTIVITIES","parseDate","useStyles","Activity","classes","loading","setLoading","data","setData","fetchData","url","then","result","error","renderActivityItems","length","map","item","index","title","created_at","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAE,EAAF,CAA5B;;AAIA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,MAAMC,OAAO,GAAGF,SAAS,EAAzB;;AADqB,kBAGSZ,QAAQ,CAAC,IAAD,CAHjB;AAAA,MAGde,OAHc;AAAA,MAGLC,UAHK;;AAAA,mBAIGhB,QAAQ,CAAC,EAAD,CAJX;AAAA,MAIdiB,IAJc;AAAA,MAIRC,OAJQ;;AAMrB,MAAMC,SAAS,GAAGlB,WAAW,CAAC,YAAM;AAClC,QAAMmB,GAAG,GAAGV,cAAZ;AAEAD,IAAAA,GAAG,CAACW,GAAD,CAAH,CACGC,IADH,CACQ,UAAAC,MAAM,EAAI;AACdJ,MAAAA,OAAO,CAACI,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEL,IAAT,CAAP;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJH,WAKS,UAACO,KAAD,EAAW;AAChBP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAPH;AAQD,GAX4B,EAW1B,EAX0B,CAA7B;AAaAd,EAAAA,SAAS,CAACiB,SAAD,EAAY,EAAZ,CAAT;;AAEA,MAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,QAAIT,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AAEb,QAAI,CAACE,IAAD,IAAS,CAACA,IAAI,CAACQ,MAAnB,EAA2B,oBACzB,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,aADyB;AAI3B,WAAOR,IAAI,CAACS,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,0BACd,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,KAAK,EAAED,IAAI,CAACE,KADd;AAEE,UAAA,IAAI,EAAElB,SAAS,CAACgB,IAAI,CAACG,UAAN;AAFjB;AAAA;AAAA;AAAA;AAAA;AADF,wBAAuCH,IAAI,CAACI,EAA5C,cAAkDH,KAAlD;AAAA;AAAA;AAAA;AAAA,eADc;AAAA,KAAT,CAAP;AAQD,GAfD;;AAiBA,sBACE;AAAK,IAAA,IAAI,EAAC,UAAV;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAGE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,UAAU,EAAC,SAAvC;AAAA,gBACGJ,mBAAmB;AADtB;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CA/CD;;GAAMX,Q;UACYD,S;;;KADZC,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\"\nimport ActivityCard from \"../components/activity-card\"\nimport ActivityHeader from \"../components/activity-header\"\nimport Loading from \"../components/loading\"\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmptyItems from \"../components/empty-items\";\nimport { get } from '../api/API'\nimport { GET_ACTIVITIES } from '../constant/api'\nimport { parseDate } from \"../utils/utils\";\n\nconst useStyles = makeStyles(({\n\n}))\n\nconst Activity = () => {\n  const classes = useStyles()\n\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState([])\n\n  const fetchData = useCallback(() => {\n    const url = GET_ACTIVITIES\n\n    get(url)\n      .then(result => {\n        setData(result?.data)\n        setLoading(false)\n      })\n      .catch((error) => {\n        setLoading(true)\n      })\n  }, [])\n\n  useEffect(fetchData, []);\n\n  const renderActivityItems = () => {\n    if (loading) return <Loading />\n\n    if (!data && !data.length) return (\n      <EmptyItems type=\"activity\" />\n    )\n\n    return data.map((item, index) => \n      <Grid item xs={12} sm={3} key={`item-${item.id}-${index}`}>\n        <ActivityCard\n          title={item.title}\n          date={parseDate(item.created_at)}\n        />\n      </Grid>\n    )\n  }\n\n  return (\n    <div role=\"activity\">\n      <ActivityHeader />\n\n      <Grid container spacing={3} alignItems=\"stretch\">\n        {renderActivityItems()}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Activity"]},"metadata":{},"sourceType":"module"}