{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/containers/layout.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport Header from './header';\nimport { makeStyles } from '@material-ui/core';\nimport styles from './styles';\nimport Container from '@material-ui/core/Container';\nimport { useData } from '../store/configureStore';\nimport { useRouter } from 'next/router';\nimport ActivityHeader from '../components/activity-header';\nimport { get } from '../api/API';\nimport { ACTIVITY_GROUPS } from '../constant/api';\nvar useStyles = makeStyles(styles);\n\nvar Layout = function Layout(props) {\n  _s();\n\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _useData = useData(),\n      _useData2 = _slicedToArray(_useData, 4),\n      loading = _useData2[0],\n      setLoading = _useData2[1],\n      data = _useData2[2],\n      setData = _useData2[3];\n\n  var fetchData = useCallback(function () {\n    var url = ACTIVITY_GROUPS + '?email=notfound@gmail.com';\n\n    var onRefetch = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var responses;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return get(url);\n\n              case 3:\n                responses = _context.sent;\n                setData({\n                  name: '@@FetchActivity',\n                  items: responses === null || responses === void 0 ? void 0 : responses.data\n                });\n                setLoading(false);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                setLoading(true);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function onRefetch() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    onRefetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      className: classes.layout,\n      children: [/*#__PURE__*/_jsxDEV(ActivityHeader, {\n        title: \"Activity\",\n        onRefetch: fetchData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Layout, \"vpBcfZtyD7vppoR9IczXsUffkig=\", false, function () {\n  return [useStyles, useRouter, useData];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/containers/layout.tsx"],"names":["React","useCallback","Header","makeStyles","styles","Container","useData","useRouter","ActivityHeader","get","ACTIVITY_GROUPS","useStyles","Layout","props","classes","router","loading","setLoading","data","setData","fetchData","url","onRefetch","responses","name","items","layout","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AAEA,IAAMC,SAAS,GAAGR,UAAU,CAACC,MAAD,CAA5B;;AAEA,IAAMQ,MAAgB,GAAG,SAAnBA,MAAmB,CAACC,KAAD,EAAW;AAAA;;AAClC,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,MAAMI,MAAM,GAAGR,SAAS,EAAxB;;AAFkC,iBAIWD,OAAO,EAJlB;AAAA;AAAA,MAI3BU,OAJ2B;AAAA,MAIlBC,UAJkB;AAAA,MAINC,IAJM;AAAA,MAIAC,OAJA;;AAMlC,MAAMC,SAAS,GAAGnB,WAAW,CAAC,YAAM;AAClC,QAAMoB,GAAG,GAAGX,eAAe,GAAG,2BAA9B;;AAEA,QAAMY,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEUb,GAAG,CAACY,GAAD,CAFb;;AAAA;AAERE,gBAAAA,SAFQ;AAGdJ,gBAAAA,OAAO,CAAC;AACNK,kBAAAA,IAAI,EAAE,iBADA;AAENC,kBAAAA,KAAK,EAAEF,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEL;AAFZ,iBAAD,CAAP;AAIAD,gBAAAA,UAAU,CAAC,KAAD,CAAV;AAPc;AAAA;;AAAA;AAAA;AAAA;AASdA,gBAAAA,UAAU,CAAC,IAAD,CAAV;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATK,SAAS;AAAA;AAAA;AAAA,OAAf;;AAYAA,IAAAA,SAAS;AACV,GAhB4B,EAgB1B,EAhB0B,CAA7B;AAkBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAEI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAER,OAAO,CAACY,MAA5C;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,UAAtB;AAAiC,QAAA,SAAS,EAAEN;AAA5C;AAAA;AAAA;AAAA;AAAA,eADF,EAEGP,KAAK,CAACc,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAjCD;;GAAMf,M;UACYD,S,EACDJ,S,EAE8BD,O;;;KAJzCM,M;AAmCN,eAAeA,MAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport Header from './header';\nimport { makeStyles } from '@material-ui/core';\nimport styles from './styles'\nimport Container from '@material-ui/core/Container';\nimport { useData } from '../store/configureStore';\nimport { useRouter } from 'next/router';\nimport ActivityHeader from '../components/activity-header';\nimport { get } from '../api/API';\nimport { ACTIVITY_GROUPS } from '../constant/api';\n\nconst useStyles = makeStyles(styles);\n\nconst Layout: React.FC = (props) => {\n  const classes = useStyles()\n  const router = useRouter()\n\n  const [loading, setLoading, data, setData] = useData()\n\n  const fetchData = useCallback(() => {\n    const url = ACTIVITY_GROUPS + '?email=notfound@gmail.com'\n\n    const onRefetch = async () => {\n      try {\n        const responses = await get(url)\n        setData({\n          name: '@@FetchActivity',\n          items: responses?.data\n        })\n        setLoading(false)\n      } catch (error) {\n        setLoading(true)\n      }\n    }\n    onRefetch()\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Header />\n        <Container maxWidth=\"md\" className={classes.layout}>\n          <ActivityHeader title=\"Activity\" onRefetch={fetchData} />\n          {props.children}\n        </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}