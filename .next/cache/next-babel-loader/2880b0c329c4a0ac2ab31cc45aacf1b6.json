{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/components/activity-header/popup.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nvar useStyles = makeStyles(styles);\n\nvar ActivityPopup = function ActivityPopup(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useReducer = useReducer(function (state, newState) {\n    return _objectSpread(_objectSpread({}, state), newState);\n  }, {\n    activityName: \"\"\n  }),\n      formInput = _useReducer[0],\n      setFormInput = _useReducer[1];\n\n  var handleClose = function handleClose() {\n    props.setOpenDialog(false);\n  };\n\n  var resetInput = function resetInput() {\n    setFormInput({\n      'activityName': null\n    });\n  };\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault();\n    console.log('submitted', formInput); // if (formInput?.comment) {\n    //   setCommentsValue({\n    //     text: formInput?.comment,\n    //     stateLocation,\n    //     photoId\n    //   })\n    //   resetInput()\n    // }\n  };\n\n  var handleInput = function handleInput(evt) {\n    var name = evt.target.name;\n    var newValue = evt.target.value;\n    setFormInput(_defineProperty({}, name, newValue));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    className: classes.dialog,\n    open: props.openDialog,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      className: classes.dialogTitle,\n      children: [\"Tambah Activity\", /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        className: classes.closeButton,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      className: classes.dialogContent,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"activityName\",\n            children: \"Nama Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            rows: 4,\n            name: \"activityName\",\n            placeholder: \"Tambahkan nama activity\",\n            value: formInput.activityName || \"\",\n            variant: \"outlined\",\n            className: classes.activityNameInput,\n            onChange: handleInput,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Simpan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActivityPopup, \"lu2VIbmI0gtevvI4J9iwRisXb9g=\", false, function () {\n  return [useStyles];\n});\n\n_c = ActivityPopup;\nexport default ActivityPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityPopup\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/components/activity-header/popup.tsx"],"names":["React","useReducer","makeStyles","TextField","Dialog","Button","styles","DialogTitle","DialogContent","DialogActions","IconButton","CloseIcon","useStyles","ActivityPopup","props","classes","state","newState","activityName","formInput","setFormInput","handleClose","setOpenDialog","resetInput","handleSubmit","evt","preventDefault","console","log","handleInput","name","target","newValue","value","dialog","openDialog","dialogTitle","closeButton","dialogContent","formGroup","activityNameInput"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\ntype Props = {\n  openDialog: boolean;\n  setOpenDialog: Function;\n}\n\nconst useStyles = makeStyles(styles);\n\nconst ActivityPopup: React.FC<Props> = (props) => {\n  const classes = useStyles()\n\n  const [formInput, setFormInput] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      activityName: \"\",\n    }\n  );\n\n  const handleClose = () => {\n    props.setOpenDialog(false);\n  };\n\n  const resetInput = () => {\n    setFormInput({\n      'activityName': null\n    });\n  }\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    console.log('submitted', formInput)\n\n    // if (formInput?.comment) {\n    //   setCommentsValue({\n    //     text: formInput?.comment,\n    //     stateLocation,\n    //     photoId\n    //   })\n\n    //   resetInput()\n    // }\n  };\n\n\n  const handleInput = evt => {\n    const name = evt.target.name;\n    const newValue = evt.target.value;\n    setFormInput({ [name]: newValue });\n  };\n\n  return (\n    <Dialog className={classes.dialog} open={props.openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>\n        Tambah Activity\n\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.dialogContent}>\n        <form onSubmit={handleSubmit}>\n          <div className={classes.formGroup}>\n            <label htmlFor=\"activityName\">Nama Activity</label>\n            <TextField\n              rows={4}\n              name=\"activityName\"\n              placeholder=\"Tambahkan nama activity\"\n              value={formInput.activityName || \"\"}\n              variant=\"outlined\"\n              className={classes.activityNameInput}\n              onChange={handleInput}\n              autoComplete=\"off\"\n            />\n          </div>\n        </form>\n      </DialogContent>\n\n      <DialogActions>\n        <Button type=\"submit\" onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n          Simpan\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ActivityPopup"]},"metadata":{},"sourceType":"module"}