{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-popup/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useCallback, useState } from 'react';\nimport { TODO_ITEMS } from '../../../../constant/api';\nimport { post, update } from '../../../../api/API';\nimport { useRouter } from 'next/router';\nvar useStyles = makeStyles(styles);\nvar validationSchema = yup.object({\n  title: yup.string().required(),\n  priority: yup.string().required()\n});\n\nvar TodoPopup = function TodoPopup(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(props.type === 'add' ? \"initial\" : props.initialValues.priority),\n      selectState = _useState[0],\n      setSelectState = _useState[1];\n\n  var formik = useFormik({\n    initialValues: _objectSpread({}, props.initialValues),\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      var _ref = values,\n          title = _ref.title,\n          priority = _ref.priority;\n      handlePostData({\n        title: title,\n        priority: priority\n      });\n    }\n  });\n\n  var handleClose = function handleClose() {\n    props.setOpenDialog(false);\n  };\n\n  var handlePostData = useCallback(function (values) {\n    var isAddAction = props.type === 'add';\n    var url = isAddAction ? TODO_ITEMS : TODO_ITEMS + \"/\".concat(query === null || query === void 0 ? void 0 : query.id);\n\n    var onPost = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var field;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                field = _objectSpread({\n                  \"activity_group_id\": query === null || query === void 0 ? void 0 : query.id\n                }, values);\n\n                if (!isAddAction) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 5;\n                return post(url, _objectSpread({}, field));\n\n              case 5:\n                _context.next = 9;\n                break;\n\n              case 7:\n                _context.next = 9;\n                return update(url, _objectSpread({}, field));\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 14:\n                _context.prev = 14;\n                handleClose();\n                props.onRefetch();\n                formik.resetForm();\n                return _context.finish(14);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11, 14, 19]]);\n      }));\n\n      return function onPost() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    onPost();\n  }, [handleClose, props.onRefetch, props.type]);\n\n  var handleSelectChange = function handleSelectChange(event) {\n    setSelectState(event.target.value);\n    formik.setFieldValue('priority', event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    className: classes.dialog,\n    open: props.openDialog,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      className: classes.dialogTitle,\n      children: [props.title, /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        className: classes.closeButton,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      className: classes.dialogContent,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Nama List Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            rows: 4,\n            name: \"title\",\n            placeholder: \"\".concat(props.type === \"add\" ? 'Tambahkan' : 'Ubah', \"  nama list item\"),\n            value: formik.values.title,\n            variant: \"outlined\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            autoFocus: true,\n            className: \"\".concat(formik.errors.title && formik.touched.title ? classes.formikErrors : null, \" \").concat(classes.todoInput),\n            autoComplete: \"off\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"priority\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"priority\",\n            id: \"priority\",\n            value: selectState,\n            onChange: handleSelectChange,\n            className: \"\".concat(formik.errors.title && formik.touched.title ? classes.formikErrors : null, \" \").concat(classes.todoCheck),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"initial\",\n              disabled: true,\n              children: \"Pilih Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"very-high\",\n              children: \"Very High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"high\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"normal\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"very-low\",\n              children: \"Very Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: function onClick() {\n          return formik.handleSubmit();\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Simpan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TodoPopup, \"tWagbf9Cgr3xzWBwsrAFZa/3004=\", false, function () {\n  return [useStyles, useRouter, useFormik];\n});\n\n_c = TodoPopup;\nexport default TodoPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPopup\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-popup/index.tsx"],"names":["Dialog","Button","DialogTitle","DialogContent","DialogActions","makeStyles","IconButton","CloseIcon","TextField","styles","useFormik","yup","Select","MenuItem","useCallback","useState","TODO_ITEMS","post","update","useRouter","useStyles","validationSchema","object","title","string","required","priority","TodoPopup","props","classes","query","type","initialValues","selectState","setSelectState","formik","onSubmit","values","handlePostData","handleClose","setOpenDialog","isAddAction","url","id","onPost","field","console","error","onRefetch","resetForm","handleSelectChange","event","target","value","setFieldValue","dialog","openDialog","dialogTitle","closeButton","dialogContent","handleSubmit","formGroup","handleChange","handleBlur","errors","touched","formikErrors","todoInput","todoCheck"],"mappings":"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","sourcesContent":["import Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './styles'\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useCallback, useState } from 'react';\nimport { TODO_ITEMS } from '../../../../constant/api';\nimport { post, update } from '../../../../api/API';\nimport { useRouter } from 'next/router';\n\nconst useStyles = makeStyles(styles);\n\nconst validationSchema = yup.object({\n  title: yup.string().required(),\n  priority: yup.string().required()\n});\n\ntype Props = {\n  type: 'add' | 'edit';\n  openDialog: boolean;\n  title: string;\n  setOpenDialog: Function;\n  onRefetch: Function;\n  initialValues: {\n    title: string;\n    priority: string;\n  }\n}\n\nconst TodoPopup: React.FC<Props> = (props) => {\n  const classes = useStyles()\n  const { query } = useRouter()\n  const [selectState, setSelectState] = useState(\n    props.type === 'add' ? \"initial\" : props.initialValues.priority\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      ...props.initialValues\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      const { title, priority } = values!!\n\n      handlePostData({\n        title,\n        priority,\n      })\n    },\n  })\n\n  const handleClose = () => {\n    props.setOpenDialog(false);\n  };\n\n  const handlePostData = useCallback((values) => {\n    const isAddAction = props.type === 'add'\n    const url = isAddAction ? TODO_ITEMS : TODO_ITEMS + `/${query?.id}`\n\n    const onPost = async () => {\n      try {\n        const field = {\n          \"activity_group_id\": query?.id,\n          ...values,\n        }\n\n        if (isAddAction) {\n          await post(url, { ...field })\n        } else {\n          await update(url, { ...field })\n        }\n      } catch (error) {\n        console.error(error)\n      } finally {\n        handleClose()\n        props.onRefetch()\n        formik.resetForm()\n      }\n    }\n\n    onPost()\n  }, [handleClose, props.onRefetch, props.type])\n\n  const handleSelectChange = (event) => {\n    setSelectState(event.target.value);\n    formik.setFieldValue('priority', event.target.value)\n  };\n\n  return (\n    <Dialog className={classes.dialog} open={props.openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>\n        {props.title}\n\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.dialogContent}>\n        <form onSubmit={formik.handleSubmit}>\n          <div className={classes.formGroup}>\n            <label htmlFor=\"title\">Nama List Item</label>\n            <TextField\n              rows={4}\n              name=\"title\"\n              placeholder={`${props.type === \"add\" ? 'Tambahkan' : 'Ubah'}  nama list item`}\n              value={formik.values.title}\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              autoFocus\n              className={\n                `${formik.errors.title && formik.touched.title ? classes.formikErrors : null} ${classes.todoInput}`\n              }\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n\n          <div className={classes.formGroup}>\n            <label htmlFor=\"priority\">Priority</label>\n            <Select\n              name=\"priority\"\n              id=\"priority\"\n              value={selectState}\n              onChange={handleSelectChange}\n              className={\n                `${formik.errors.title && formik.touched.title ? classes.formikErrors : null} ${classes.todoCheck}`\n              }\n            >\n              <MenuItem value=\"initial\" disabled>Pilih Priority</MenuItem>\n              <MenuItem value=\"very-high\">Very High</MenuItem>\n              <MenuItem value='high'>High</MenuItem>\n              <MenuItem value='normal'>Medium</MenuItem>\n              <MenuItem value='low'>Low</MenuItem>\n              <MenuItem value='very-low'>Very Low</MenuItem>\n            </Select>\n          </div>\n        </form>\n      </DialogContent>\n\n      <DialogActions>\n        <Button type=\"submit\" onClick={() => formik.handleSubmit()} variant=\"contained\" color=\"primary\">\n          Simpan\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default TodoPopup"]},"metadata":{},"sourceType":"module"}