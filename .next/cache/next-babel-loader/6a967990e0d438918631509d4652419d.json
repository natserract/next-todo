{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport EmptyItems from '../../../../components/empty-items';\nimport { TODO_ITEMS } from '../../../../constant/api';\nimport { update } from '../../../../api/API';\nconst useStyles = makeStyles(styles);\n\nconst CardItems = props => {\n  const cs = useStyles();\n  const checkedRef = useRef({});\n  const {\n    0: checkedState,\n    1: setCheckedState\n  } = useState({}); // Create initial state for checkBox\n\n  useEffect(() => {\n    Object.keys(props.items).map(v => {\n      checkedRef.current[`checked_${props.items[v].id}`] = props.items[v]['is_active'] === 0;\n    });\n    console.log('checkedRef.current', checkedRef.current);\n    setCheckedState(_objectSpread({}, checkedRef.current));\n  }, [props.items]);\n\n  const handleCheckChange = event => {\n    const id = event.target.name.split('_')[1];\n    const checkedValue = event.target.checked;\n    handleComplete(id, checkedValue);\n  };\n\n  const handleComplete = (id, value) => {\n    const url = TODO_ITEMS + `/${id}`;\n\n    const onUpdate = async () => {\n      try {\n        const responses = await update(url, {\n          \"is_active\": +value\n        });\n        console.log('responses', responses, value);\n        setCheckedState(_objectSpread(_objectSpread({}, checkedState), {}, {\n          [`checked_${id}`]: +value\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    onUpdate();\n  };\n\n  const handleDelete = () => {};\n\n  const renderItems = () => {\n    if (props.itemEmpty) return /*#__PURE__*/_jsxDEV(EmptyItems, {\n      path: \"../todo-empty-state.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }, this);\n    return props.items.map((v, idx) => {\n      const key = `checked_${v.id}`;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: cs.root,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"priority\",\n            className: cs.prior,\n            style: {\n              background: mappingColorPriority(v.priority)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: cs.formLabel,\n            control:\n            /*#__PURE__*/\n            // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n            // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n            _jsxDEV(Checkbox, {\n              color: \"primary\",\n              checked: checkedState[key],\n              onChange: handleCheckChange,\n              name: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this),\n            label: v.title\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleDelete,\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: renderItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 10\n  }, this);\n};\n\nexport default CardItems;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx"],"names":["useState","useRef","useEffect","makeStyles","Card","FormControlLabel","Checkbox","styles","React","Grid","IconButton","DeleteOutlineIcon","mappingColorPriority","EmptyItems","TODO_ITEMS","update","useStyles","CardItems","props","cs","checkedRef","checkedState","setCheckedState","Object","keys","items","map","v","current","id","console","log","handleCheckChange","event","target","name","split","checkedValue","checked","handleComplete","value","url","onUpdate","responses","error","handleDelete","renderItems","itemEmpty","idx","key","root","prior","background","priority","formLabel","title"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles'\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport EmptyItems from '../../../../components/empty-items';\nimport { TODO_ITEMS } from '../../../../constant/api';\nimport { update } from '../../../../api/API';\n\ntype Props = {\n  items: Array <any>;\n  itemEmpty: boolean;\n  setItemEmpty: Function;\n}\n\nconst useStyles = makeStyles(styles)\n\nconst CardItems: React.FC<Props> = (props) => {\n  const cs = useStyles()\n  const checkedRef = useRef({})\n  const [checkedState, setCheckedState] = useState({});\n\n  // Create initial state for checkBox\n  useEffect(() => {\n    Object.keys(props.items).map(v => {\n      checkedRef.current[`checked_${props.items[v].id}`] = props.items[v]['is_active'] === 0\n    })\n\n\n    console.log('checkedRef.current', checkedRef.current)\n    setCheckedState({ ...checkedRef.current })\n  }, [props.items])\n\n  const handleCheckChange = (event) => {\n    const id = event.target.name.split('_')[1]\n    const checkedValue = event.target.checked\n\n    handleComplete(id, checkedValue)\n  };\n\n  const handleComplete = (id: string, value: string) => {\n    const url = TODO_ITEMS + `/${id}`\n\n    const onUpdate = async () => {\n      try {\n        const responses = await update(url, {\n          \"is_active\": +value\n        })\n\n        console.log('responses', responses, value)\n        setCheckedState(\n          { ...checkedState, \n          [`checked_${id}`]: +value\n        });\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    onUpdate()\n  }\n\n  const handleDelete = () => {\n\n  }\n\n  const renderItems = () => {\n    if (props.itemEmpty) return <EmptyItems path=\"../todo-empty-state.png\" />\n\n    return props.items.map((v, idx) => {\n      const key = `checked_${v.id}`\n\n      return (\n        <Grid item sm={12} key={key}>\n          <Card className={cs.root}>\n            <span\n              role=\"priority\"\n              className={cs.prior}\n              style={{ background: mappingColorPriority(v.priority) }}\n            />\n\n            <FormControlLabel\n              className={cs.formLabel}\n              key={idx}\n              control={\n                // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n                // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n                <Checkbox\n                  color=\"primary\"\n                  checked={checkedState[key]}\n                  onChange={handleCheckChange}\n                  name={key}\n                />\n              }\n              label={v.title}\n            />\n\n            <IconButton onClick={handleDelete} aria-label=\"delete\">\n              <DeleteOutlineIcon />\n            </IconButton>\n          </Card>\n        </Grid>\n      )\n    })\n  }\n\n  return <React.Fragment children={renderItems()} />\n}\n\nexport default CardItems"]},"metadata":{},"sourceType":"module"}