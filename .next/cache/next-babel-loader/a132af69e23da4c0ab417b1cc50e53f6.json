{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity.tsx\";\nimport React, { useState } from \"react\";\nimport ActivityCard from \"../components/activity-card\";\nimport ActivityHeader from \"../components/activity-header\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmptyItems from \"../components/empty-items\";\nconst DATA = [];\nconst useStyles = makeStyles({});\n\nconst Activity = () => {\n  const classes = useStyles();\n  const {\n    0: state,\n    1: setState\n  } = useState(DATA);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"activity\",\n    children: [/*#__PURE__*/_jsxDEV(ActivityHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\",\n      children: state && state.length ? state.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(ActivityCard, {\n          title: item.title,\n          date: item.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, `item-${item.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(EmptyItems, {\n        type: \"todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Activity;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity.tsx"],"names":["React","useState","ActivityCard","ActivityHeader","Grid","makeStyles","EmptyItems","DATA","useStyles","Activity","classes","state","setState","length","map","item","index","title","date","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,MAAMC,IAAI,GAAG,EAAb;AAIA,MAAMC,SAAS,GAAGH,UAAU,CAAE,EAAF,CAA5B;;AAIA,MAAMI,QAAQ,GAAG,MAAM;AACrB,QAAMC,OAAO,GAAGF,SAAS,EAAzB;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAACM,IAAD,CAAlC;AAEA,sBACE;AAAK,IAAA,IAAI,EAAC,UAAV;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,UAAU,EAAC,SAAvC;AAAA,gBACGI,KAAK,IAAIA,KAAK,CAACE,MAAf,GAAwBF,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACjC,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,KAAK,EAAED,IAAI,CAACE,KADd;AAEE,UAAA,IAAI,EAAEF,IAAI,CAACG;AAFb;AAAA;AAAA;AAAA;AAAA;AADF,SAAgC,QAAOH,IAAI,CAACI,EAAG,IAAGH,KAAM,EAAxD;AAAA;AAAA;AAAA;AAAA,cADuB,CAAxB,gBAOG,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApBD;;AAsBA,eAAeP,QAAf","sourcesContent":["import React, { useState } from \"react\"\nimport ActivityCard from \"../components/activity-card\"\nimport ActivityHeader from \"../components/activity-header\"\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmptyItems from \"../components/empty-items\";\n\nconst DATA = [\n  \n]\n\nconst useStyles = makeStyles(({\n\n}))\n\nconst Activity = () => {\n  const classes = useStyles()\n  const [state, setState] = useState(DATA)\n\n  return (\n    <div role=\"activity\">\n      <ActivityHeader />\n\n      <Grid container spacing={3} alignItems=\"stretch\">\n        {state && state.length ? state.map((item, index) =>\n          <Grid item xs={12} sm={3} key={`item-${item.id}-${index}`}>\n            <ActivityCard \n              title={item.title}\n              date={item.date}\n            />\n          </Grid>\n        ) : <EmptyItems type=\"todo\" />}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Activity"]},"metadata":{},"sourceType":"module"}