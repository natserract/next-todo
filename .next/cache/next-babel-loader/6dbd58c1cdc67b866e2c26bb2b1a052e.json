{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport EmptyItems from '../../../../components/empty-items';\nimport { TODO_ITEMS } from '../../../../constant/api';\nimport { update } from '../../../../api/API';\nimport Button from '@material-ui/core/Button';\nimport CreateRoundedIcon from '@material-ui/icons/CreateRounded';\nconst useStyles = makeStyles(styles);\n\nconst CardItems = props => {\n  const cs = useStyles();\n  const checkedRef = useRef({});\n  const {\n    0: checkedState,\n    1: setCheckedState\n  } = useState({}); // Create initial state for checkBox\n\n  useEffect(() => {\n    Object.keys(props.items).map(v => {\n      checkedRef.current[`checked_${props.items[v].id}`] = props.items[v]['is_active'] === 0;\n    });\n    console.log('props.items', props.items);\n    setCheckedState(_objectSpread({}, checkedRef.current));\n  }, [props.items]);\n\n  const handleCheckChange = event => {\n    const id = event.target.name.split('_')[1];\n    const value = event.target.checked ? 0 : 1;\n    setCheckedState(_objectSpread(_objectSpread({}, checkedState), {}, {\n      [event.target.name]: event.target.checked\n    }));\n    handleComplete(id, value);\n  };\n\n  const handleComplete = (id, value) => {\n    const url = TODO_ITEMS + `/${id}`;\n\n    const onUpdate = async () => {\n      try {\n        await update(url, {\n          \"is_active\": value\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    onUpdate();\n  };\n\n  const handleDelete = v => {\n    props.onDelete(v);\n  };\n\n  const handleEdit = id => {\n    props.onEdit(id);\n  };\n\n  const renderItems = () => {\n    if (props.itemEmpty) return /*#__PURE__*/_jsxDEV(EmptyItems, {\n      path: \"../todo-empty-state.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }, this);\n    return props.items.map((v, idx) => {\n      const key = `checked_${v.id}`;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: cs.root,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"priority\",\n            className: cs.prior,\n            style: {\n              background: mappingColorPriority(v.priority)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            role: \"middle\",\n            className: cs.middle,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              className: `${cs.formLabel} ${v.is_active === 0 ? cs.sup : null}`,\n              control:\n              /*#__PURE__*/\n              // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n              // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n              _jsxDEV(Checkbox, {\n                color: \"primary\",\n                checked: !!checkedState[key],\n                onChange: handleCheckChange,\n                name: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this),\n              label: v.title\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"inherit\",\n              startIcon: /*#__PURE__*/_jsxDEV(CreateRoundedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 28\n              }, this),\n              className: cs.btnEdit,\n              onClick: () => handleEdit(v.id),\n              disableRipple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleDelete({\n              id: v.id,\n              title: v.title\n            }),\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: renderItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 10\n  }, this);\n};\n\nexport default CardItems;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx"],"names":["useState","useRef","useEffect","makeStyles","Card","FormControlLabel","Checkbox","styles","React","Grid","IconButton","DeleteOutlineIcon","mappingColorPriority","EmptyItems","TODO_ITEMS","update","Button","CreateRoundedIcon","useStyles","CardItems","props","cs","checkedRef","checkedState","setCheckedState","Object","keys","items","map","v","current","id","console","log","handleCheckChange","event","target","name","split","value","checked","handleComplete","url","onUpdate","error","handleDelete","onDelete","handleEdit","onEdit","renderItems","itemEmpty","idx","key","root","prior","background","priority","middle","formLabel","is_active","sup","title","btnEdit"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles'\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport EmptyItems from '../../../../components/empty-items';\nimport { TODO_ITEMS } from '../../../../constant/api';\nimport { update } from '../../../../api/API';\nimport Button from '@material-ui/core/Button';\nimport CreateRoundedIcon from '@material-ui/icons/CreateRounded';\n\ntype Props = {\n  items: Array<any>;\n  itemEmpty: boolean;\n  setItemEmpty: Function;\n  onEdit: (id: string) => void;\n  onDelete: (v: { id: string, title: string }) => void;\n}\n\nconst useStyles = makeStyles(styles)\n\nconst CardItems: React.FC<Props> = (props) => {\n  const cs = useStyles()\n  const checkedRef = useRef({})\n  \n  const [checkedState, setCheckedState] = useState({});\n\n  // Create initial state for checkBox\n  useEffect(() => {\n    Object.keys(props.items).map(v => {\n      checkedRef.current[`checked_${props.items[v].id}`] = props.items[v]['is_active'] === 0\n    })\n\n    console.log('props.items', props.items)\n    setCheckedState({ ...checkedRef.current })\n  }, [props.items])\n\n  const handleCheckChange = (event) => {\n    const id = event.target.name.split('_')[1]\n    const value = event.target.checked ? 0 : 1\n\n    setCheckedState(\n      {\n        ...checkedState,\n        [event.target.name]:\n          event.target.checked\n      });\n    handleComplete(id, value)\n  };\n\n  const handleComplete = (id: string, value: number) => {\n    const url = TODO_ITEMS + `/${id}`\n\n    const onUpdate = async () => {\n      try {\n        await update(url, {\n          \"is_active\": value,\n        })\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    onUpdate()\n  }\n\n  const handleDelete = (v) => {\n    props.onDelete(v)\n  }\n\n  const handleEdit = (id: string) => {\n    props.onEdit(id)\n  }\n\n  const renderItems = () => {\n    if (props.itemEmpty) return <EmptyItems path=\"../todo-empty-state.png\" />\n\n    return props.items.map((v, idx) => {\n      const key = `checked_${v.id}`\n\n      return (\n        <Grid item sm={12} key={key}>\n          <Card className={cs.root}>\n            <span\n              role=\"priority\"\n              className={cs.prior}\n              style={{ background: mappingColorPriority(v.priority) }}\n            />\n\n            <div role=\"middle\" className={cs.middle}> \n              <FormControlLabel\n                className={`${cs.formLabel} ${v.is_active === 0 ? cs.sup : null}`}\n                key={idx}\n                control={\n                  // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n                  // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n                  <Checkbox\n                    color=\"primary\"\n                    checked={!!checkedState[key]}\n                    onChange={handleCheckChange}\n                    name={key}\n                  />\n                }\n                label={v.title}\n              />\n\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                startIcon={<CreateRoundedIcon />}\n                className={cs.btnEdit}\n                onClick={() => handleEdit(v.id)}\n                disableRipple\n              />\n            </div>\n\n            <IconButton onClick={() => handleDelete({ id: v.id, title: v.title })} aria-label=\"delete\">\n              <DeleteOutlineIcon />\n            </IconButton>\n          </Card>\n        </Grid>\n      )\n    })\n  }\n\n  return <React.Fragment children={renderItems()} />\n}\n\nexport default CardItems"]},"metadata":{},"sourceType":"module"}