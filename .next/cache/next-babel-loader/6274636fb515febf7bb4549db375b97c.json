{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity.tsx\";\nimport React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport ActivityCard from \"../components/activity-card\";\nimport Loading from \"../components/loading\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmptyItems from \"../components/empty-items\";\nimport { get, remove } from '../api/API';\nimport { ACTIVITY_GROUPS } from '../constant/api';\nimport { parseDate } from \"../utils/utils\";\nimport AlertNotification from \"../components/alert-notification\";\nimport ConfirmPopup from '../components/confirm-popup';\nimport { useData } from \"../store/configureStore\";\nconst confirmMessage = \"Apakah Anda yakin ingin menghapus activity\";\nconst useStyles = makeStyles({});\n\nconst Activity = () => {\n  var _activityRef$current;\n\n  const classes = useStyles(); // const [data, setData] = useState([])\n  // const [loading, setLoading] = useState(true)\n\n  const [loading, setLoading, data, setData] = useData();\n  const {\n    0: openConfirmPopup,\n    1: setOpenConfirmPopup\n  } = useState(false);\n  const {\n    0: visibleAlert,\n    1: setVisibleAlert\n  } = useState(false);\n  const activityRef = useRef({\n    id: \"\",\n    title: \"\"\n  });\n\n  const fetchData = () => {\n    const url = ACTIVITY_GROUPS + '?email=notfound@gmail.com';\n\n    const onFetch = async () => {\n      try {\n        const responses = await get(url);\n        setData({\n          name: 'Activity',\n          items: responses === null || responses === void 0 ? void 0 : responses.data\n        });\n        setLoading(false);\n      } catch (error) {\n        setLoading(true);\n      }\n    };\n\n    onFetch();\n  };\n\n  useEffect(fetchData, []);\n\n  const handleDelete = (id, title) => {\n    setOpenConfirmPopup(true);\n    activityRef.current = {\n      id,\n      title\n    };\n  };\n\n  const confirmDelete = useCallback(() => {\n    const {\n      id\n    } = activityRef.current;\n    const url = ACTIVITY_GROUPS + `/${id}`;\n    setVisibleAlert(true);\n\n    const onDelete = async () => {\n      setLoading(true);\n\n      try {\n        await remove(url);\n        fetchData();\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setOpenConfirmPopup(false);\n      }\n    };\n\n    onDelete();\n  }, [fetchData]);\n  const renderActivityItems = useCallback(() => {\n    if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }, this);\n    if (!data.items.length) return /*#__PURE__*/_jsxDEV(EmptyItems, {\n      type: \"activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n    return data.items.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      children: /*#__PURE__*/_jsxDEV(ActivityCard, {\n        title: item.title,\n        date: parseDate(item.created_at),\n        onDelete: () => handleDelete(item.id, item.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, `item-${item.id}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this));\n  }, [data, loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"activity\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\",\n      children: renderActivityItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmPopup, {\n      open: openConfirmPopup,\n      setOpen: setOpenConfirmPopup,\n      message: `${confirmMessage} <b>\"${(_activityRef$current = activityRef.current) === null || _activityRef$current === void 0 ? void 0 : _activityRef$current.title}</b>\"`,\n      onSubmit: confirmDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertNotification, {\n      visibleAlert: visibleAlert,\n      setVisibleAlert: setVisibleAlert,\n      title: \"Activity berhasil dihapus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Activity;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity.tsx"],"names":["React","useState","useCallback","useEffect","useRef","ActivityCard","Loading","Grid","makeStyles","EmptyItems","get","remove","ACTIVITY_GROUPS","parseDate","AlertNotification","ConfirmPopup","useData","confirmMessage","useStyles","Activity","classes","loading","setLoading","data","setData","openConfirmPopup","setOpenConfirmPopup","visibleAlert","setVisibleAlert","activityRef","id","title","fetchData","url","onFetch","responses","name","items","error","handleDelete","current","confirmDelete","onDelete","console","renderActivityItems","length","map","item","index","created_at"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\"\nimport ActivityCard from \"../components/activity-card\"\nimport ActivityHeader from \"../components/activity-header\"\nimport Loading from \"../components/loading\"\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmptyItems from \"../components/empty-items\";\nimport { get, remove } from '../api/API'\nimport { ACTIVITY_GROUPS } from '../constant/api'\nimport { parseDate } from \"../utils/utils\";\nimport AlertNotification from \"../components/alert-notification\";\nimport ConfirmPopup from '../components/confirm-popup'\nimport { useData } from \"../store/configureStore\";\n\nconst confirmMessage = \"Apakah Anda yakin ingin menghapus activity\"\n\nconst useStyles = makeStyles(({}))\n\nconst Activity = () => {\n  const classes = useStyles()\n  // const [data, setData] = useState([])\n  // const [loading, setLoading] = useState(true)\n  const [loading, setLoading, data, setData] = useData()\n  const [openConfirmPopup, setOpenConfirmPopup] = useState(false)\n  const [visibleAlert, setVisibleAlert] = useState(false)\n\n\n  const activityRef = useRef({\n    id: \"\",\n    title: \"\",\n  })\n\n  const fetchData = () => {\n    const url = ACTIVITY_GROUPS + '?email=notfound@gmail.com'\n\n    const onFetch = async () => {\n      try {\n        const responses = await get(url)\n        setData({\n          name: 'Activity',\n          items: responses?.data\n        })\n        setLoading(false)\n      } catch (error) {\n        setLoading(true)\n      }\n    }\n\n    onFetch()\n  }\n\n  useEffect(fetchData, []);\n\n  const handleDelete = (id: string, title: string,) => {\n    setOpenConfirmPopup(true)\n    activityRef.current = {\n      id,\n      title\n    }\n  }\n\n  const confirmDelete = useCallback(() => {\n    const { id } = activityRef.current\n\n    const url = ACTIVITY_GROUPS + `/${id}`\n    setVisibleAlert(true)\n\n    const onDelete = async () => {\n      setLoading(true)\n\n      try {\n        await remove(url)\n        fetchData()\n      } catch (error) {\n        console.error(error)\n      } finally {\n        setOpenConfirmPopup(false)\n      }\n    }\n\n    onDelete()\n  }, [fetchData])\n\n  const renderActivityItems = useCallback(() => {\n    if (loading) return <Loading />\n\n    if (!data.items.length) return (\n      <EmptyItems type=\"activity\" />\n    )\n\n    return data.items.map((item, index) =>\n      <Grid item xs={12} sm={3} key={`item-${item.id}-${index}`}>\n        <ActivityCard\n          title={item.title}\n          date={parseDate(item.created_at)}\n          onDelete={() => handleDelete(item.id, item.title)}\n        />\n      </Grid>\n    )\n  }, [data, loading])\n\n  return (\n    <div role=\"activity\">\n      {/* <ActivityHeader title=\"Activity\" onRefetch={fetchData} /> */}\n\n      <Grid container spacing={3} alignItems=\"stretch\">\n        {renderActivityItems()}\n      </Grid>\n\n      <ConfirmPopup\n        open={openConfirmPopup}\n        setOpen={setOpenConfirmPopup}\n        message={`${confirmMessage} <b>\"${activityRef.current?.title}</b>\"`}\n        onSubmit={confirmDelete}\n      />\n\n      <AlertNotification\n        visibleAlert={visibleAlert}\n        setVisibleAlert={setVisibleAlert}\n        title=\"Activity berhasil dihapus\"\n      />\n    </div>\n  )\n}\n\nexport default Activity"]},"metadata":{},"sourceType":"module"}