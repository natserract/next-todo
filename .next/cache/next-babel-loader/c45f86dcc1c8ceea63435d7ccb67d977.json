{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity.tsx\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport ActivityHeader from \"../components/activity-header\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { get } from '../api/API';\nimport { GET_ACTIVITIES } from '../constant/api';\nconst useStyles = makeStyles({});\n\nconst Activity = () => {\n  const classes = useStyles();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const fetchData = useCallback(() => {\n    const url = GET_ACTIVITIES;\n    get(url).then(result => {\n      console.log('result', result); // const usersData = data[1]\n      // const albumsData = findsBy(data[0], usersData, ['userId'])\n      // setData({\n      //   albums: albumsData!!,\n      //   users: usersData\n      // })\n\n      setLoading(false);\n    }).catch(error => {\n      setLoading(true);\n    });\n  }, []);\n  useEffect(fetchData, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"activity\",\n    children: [/*#__PURE__*/_jsxDEV(ActivityHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Activity;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity.tsx"],"names":["React","useState","useCallback","useEffect","ActivityHeader","Grid","makeStyles","get","GET_ACTIVITIES","useStyles","Activity","classes","loading","setLoading","data","setData","fetchData","url","then","result","console","log","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAE,EAAF,CAA5B;;AAIA,MAAMI,QAAQ,GAAG,MAAM;AACrB,QAAMC,OAAO,GAAGF,SAAS,EAAzB;AAEA,QAAM;AAAA,OAACG,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACa,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMe,SAAS,GAAGd,WAAW,CAAC,MAAM;AAClC,UAAMe,GAAG,GAAGT,cAAZ;AAEAD,IAAAA,GAAG,CAACU,GAAD,CAAH,CACGC,IADH,CACQC,MAAM,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB,EADc,CAEd;AACA;AAEA;AACA;AACA;AACA;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXH,EAYGS,KAZH,CAYUC,KAAD,IAAW;AAChBV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAdH;AAeD,GAlB4B,EAkB1B,EAlB0B,CAA7B;AAoBAV,EAAAA,SAAS,CAACa,SAAD,EAAY,EAAZ,CAAT;AAEA,sBACE;AAAK,IAAA,IAAI,EAAC,UAAV;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,UAAU,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5CD;;AA8CA,eAAeN,QAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\"\nimport ActivityCard from \"../components/activity-card\"\nimport ActivityHeader from \"../components/activity-header\"\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EmptyItems from \"../components/empty-items\";\nimport { get } from '../api/API'\nimport { GET_ACTIVITIES } from '../constant/api'\n\nconst useStyles = makeStyles(({\n\n}))\n\nconst Activity = () => {\n  const classes = useStyles()\n\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState([])\n\n  const fetchData = useCallback(() => {\n    const url = GET_ACTIVITIES\n\n    get(url)\n      .then(result => {\n        console.log('result', result)\n        // const usersData = data[1]\n        // const albumsData = findsBy(data[0], usersData, ['userId'])\n\n        // setData({\n        //   albums: albumsData!!,\n        //   users: usersData\n        // })\n        setLoading(false)\n      })\n      .catch((error) => {\n        setLoading(true)\n      })\n  }, [])\n\n  useEffect(fetchData, []);\n\n  return (\n    <div role=\"activity\">\n      <ActivityHeader />\n\n      <Grid container spacing={3} alignItems=\"stretch\">\n        {/* {state && state.length ? state.map((item, index) =>\n          <Grid item xs={12} sm={3} key={`item-${item.id}-${index}`}>\n            <ActivityCard \n              title={item.title}\n              date={item.date}\n            />\n          </Grid>\n        ) : <EmptyItems type=\"activity\" />} */}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Activity"]},"metadata":{},"sourceType":"module"}