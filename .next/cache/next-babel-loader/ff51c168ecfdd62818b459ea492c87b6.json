{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-popup/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useState } from 'react';\nvar useStyles = makeStyles(styles);\nvar validationSchema = yup.object({\n  title: yup.string().required(),\n  priority: yup.string()\n});\n\nvar TodoPopup = function TodoPopup(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(\"initial\"),\n      selectState = _useState[0],\n      setSelectState = _useState[1];\n\n  var formik = useFormik({\n    initialValues: _objectSpread({}, props.initialValues),\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      var _ref = values,\n          title = _ref.title,\n          priority = _ref.priority;\n      console.log('values', values); // handlePostData(activityName)\n    }\n  });\n\n  var handleClose = function handleClose() {\n    props.setOpenDialog(false);\n  };\n\n  var handleSelectChange = function handleSelectChange(event) {\n    setSelectState(event.target.value);\n    formik.setFieldValue('priority', event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    className: classes.dialog,\n    open: props.openDialog,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      className: classes.dialogTitle,\n      children: [\"\\\"TITLE\\\"\", /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        className: classes.closeButton,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      className: classes.dialogContent,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Nama List Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            rows: 4,\n            name: \"title\",\n            placeholder: \"Tambahkan nama list item\",\n            value: formik.values.title,\n            variant: \"outlined\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            autoFocus: true,\n            className: \"\".concat(formik.errors.title && formik.touched.title ? classes.formikErrors : null, \" \").concat(classes.activityNameInput),\n            autoComplete: \"off\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"priority\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"priority\",\n            id: \"priority\",\n            value: selectState,\n            onChange: handleSelectChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"initial\",\n              disabled: true,\n              children: \"Pilih Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"very-high\",\n              children: \"Very High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"high\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"normal\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"very-low\",\n              children: \"Very Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: function onClick() {\n          return formik.handleSubmit();\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Simpan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TodoPopup, \"HH8bbERL9p1XwGsw11lfWsvWdDE=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = TodoPopup;\nexport default TodoPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPopup\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-popup/index.tsx"],"names":["Dialog","Button","DialogTitle","DialogContent","DialogActions","makeStyles","IconButton","CloseIcon","TextField","styles","useFormik","yup","Select","MenuItem","useState","useStyles","validationSchema","object","title","string","required","priority","TodoPopup","props","classes","selectState","setSelectState","formik","initialValues","onSubmit","values","console","log","handleClose","setOpenDialog","handleSelectChange","event","target","value","setFieldValue","dialog","openDialog","dialogTitle","closeButton","dialogContent","handleSubmit","formGroup","handleChange","handleBlur","errors","touched","formikErrors","activityNameInput"],"mappings":"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","sourcesContent":["import Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './styles'\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles(styles);\n\nconst validationSchema = yup.object({\n  title: yup.string().required(),\n  priority: yup.string()\n});\n\ntype Props = {\n  openDialog: boolean;\n  title: string;\n  setOpenDialog: Function;\n  onRefetch: Function;\n  initialValues: {\n    // activity_group_id: string;\n    title: string;\n    priority: string;\n  }\n}\n\nconst TodoPopup: React.FC<Props> = (props) => {\n  const classes = useStyles()\n  const [selectState, setSelectState] = useState(\"initial\");\n\n  const formik = useFormik({\n    initialValues: {\n      ...props.initialValues\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      const { title, priority } = values!!\n\n      console.log('values', values)\n      // handlePostData(activityName)\n    },\n  })\n\n  const handleClose = () => {\n    props.setOpenDialog(false);\n  };\n\n  const handleSelectChange = (event) => {\n    setSelectState(event.target.value);\n    formik.setFieldValue('priority', event.target.value)\n  };\n\n  return (\n    <Dialog className={classes.dialog} open={props.openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>\n        \"TITLE\"\n\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.dialogContent}>\n        <form onSubmit={formik.handleSubmit}>\n          <div className={classes.formGroup}>\n            <label htmlFor=\"title\">Nama List Item</label>\n            <TextField\n              rows={4}\n              name=\"title\"\n              placeholder=\"Tambahkan nama list item\"\n              value={formik.values.title}\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              autoFocus\n              className={\n                `${formik.errors.title && formik.touched.title ? classes.formikErrors : null} ${classes.activityNameInput}`\n              }\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n\n          <div className={classes.formGroup}>\n            <label htmlFor=\"priority\">Priority</label>\n            <Select\n              name=\"priority\"\n              id=\"priority\"\n              value={selectState}\n              onChange={handleSelectChange}\n            >\n              <MenuItem value=\"initial\" disabled>Pilih Priority</MenuItem>\n              <MenuItem value=\"very-high\">Very High</MenuItem>\n              <MenuItem value='high'>High</MenuItem>\n              <MenuItem value='normal'>Medium</MenuItem>\n              <MenuItem value='low'>Low</MenuItem>\n              <MenuItem value='very-low'>Very Low</MenuItem>\n            </Select>\n            {/* <TextField\n              rows={4}\n              name=\"priority\"\n              placeholder=\"Tambahkan nama list item\"\n              value={formik.values.priority}\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              autoFocus\n              className={\n                `${formik.errors.priority && formik.touched.priority ? classes.formikErrors : null} ${classes.activityNameInput}`\n              }\n              autoComplete=\"off\"\n              required\n            /> */}\n          </div>\n        </form>\n      </DialogContent>\n\n      <DialogActions>\n        <Button type=\"submit\" onClick={() => formik.handleSubmit()} variant=\"contained\" color=\"primary\">\n          Simpan\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default TodoPopup"]},"metadata":{},"sourceType":"module"}