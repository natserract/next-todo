{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/containers/layout.tsx\";\nimport React, { useCallback } from 'react';\nimport Header from './header';\nimport { makeStyles } from '@material-ui/core';\nimport styles from './styles';\nimport Container from '@material-ui/core/Container';\nimport { AllContextProvider, useData } from '../store/configureStore';\nimport { useRouter } from 'next/router';\nimport ActivityHeader from '../components/activity-header';\nimport { get } from '../api/API';\nimport { ACTIVITY_GROUPS } from '../constant/api';\nconst useStyles = makeStyles(styles);\n\nconst Layout = props => {\n  const classes = useStyles();\n  const router = useRouter();\n  const [, setLoading,, setData] = useData();\n  const fetchData = useCallback(() => {\n    const url = ACTIVITY_GROUPS + '?email=notfound@gmail.com';\n\n    const onRefetch = async () => {\n      try {\n        const responses = await get(url);\n        setData({\n          name: '@@FetchActivity',\n          items: responses === null || responses === void 0 ? void 0 : responses.data\n        });\n        setLoading(false);\n      } catch (error) {\n        setLoading(true);\n      }\n    };\n\n    onRefetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllContextProvider, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        className: classes.layout,\n        children: [/*#__PURE__*/_jsxDEV(ActivityHeader, {\n          title: \"Activity\",\n          onRefetch: fetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/containers/layout.tsx"],"names":["React","useCallback","Header","makeStyles","styles","Container","AllContextProvider","useData","useRouter","ActivityHeader","get","ACTIVITY_GROUPS","useStyles","Layout","props","classes","router","setLoading","setData","fetchData","url","onRefetch","responses","name","items","data","error","layout","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,kBAAT,EAA6BC,OAA7B,QAA4C,yBAA5C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAACC,MAAD,CAA5B;;AAEA,MAAMS,MAAgB,GAAIC,KAAD,IAAW;AAClC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAMI,MAAM,GAAGR,SAAS,EAAxB;AAEA,QAAM,GAAGS,UAAH,GAAiBC,OAAjB,IAA4BX,OAAO,EAAzC;AAEA,QAAMY,SAAS,GAAGlB,WAAW,CAAC,MAAM;AAClC,UAAMmB,GAAG,GAAGT,eAAe,GAAG,2BAA9B;;AAEA,UAAMU,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,SAAS,GAAG,MAAMZ,GAAG,CAACU,GAAD,CAA3B;AACAF,QAAAA,OAAO,CAAC;AACNK,UAAAA,IAAI,EAAE,iBADA;AAENC,UAAAA,KAAK,EAAEF,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEG;AAFZ,SAAD,CAAP;AAIAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPD,CAOE,OAAOS,KAAP,EAAc;AACdT,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KAXD;;AAYAI,IAAAA,SAAS;AACV,GAhB4B,EAgB1B,EAhB0B,CAA7B;AAkBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAEN,OAAO,CAACY,MAA5C;AAAA,gCACE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,UAAtB;AAAiC,UAAA,SAAS,EAAER;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGL,KAAK,CAACc,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnCD;;AAqCA,eAAef,MAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport Header from './header';\nimport { makeStyles } from '@material-ui/core';\nimport styles from './styles'\nimport Container from '@material-ui/core/Container';\nimport { AllContextProvider, useData } from '../store/configureStore';\nimport { useRouter } from 'next/router';\nimport ActivityHeader from '../components/activity-header';\nimport { get } from '../api/API';\nimport { ACTIVITY_GROUPS } from '../constant/api';\n\nconst useStyles = makeStyles(styles);\n\nconst Layout: React.FC = (props) => {\n  const classes = useStyles()\n  const router = useRouter()\n\n  const [, setLoading, , setData] = useData()\n\n  const fetchData = useCallback(() => {\n    const url = ACTIVITY_GROUPS + '?email=notfound@gmail.com'\n\n    const onRefetch = async () => {\n      try {\n        const responses = await get(url)\n        setData({\n          name: '@@FetchActivity',\n          items: responses?.data\n        })\n        setLoading(false)\n      } catch (error) {\n        setLoading(true)\n      }\n    }\n    onRefetch()\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Header />\n      <AllContextProvider>\n        <Container maxWidth=\"md\" className={classes.layout}>\n          <ActivityHeader title=\"Activity\" onRefetch={fetchData} />\n          {props.children}\n        </Container>\n      </AllContextProvider>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}