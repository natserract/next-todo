{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { addTodo, setTodo, deleteTodo } from '../store/actions/todos';\nimport { addUser } from '../store/actions/dataUser';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport { useRouter } from 'next/router';\nimport { generateRandomNum, removeSpaceToLower } from '../utils/utils';\nvar validationSchema = yup.object({\n  name: yup.string().required('Name is required')\n});\nvar useStyles = makeStyles(styles);\n\nvar Home = function Home(props) {\n  _s();\n\n  var classes = useStyles();\n  var routeConfig = useRouter();\n  var formik = useFormik({\n    initialValues: {\n      name: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      var randomId = 0;\n      var name = '';\n      randomId = generateRandomNum();\n      name = removeSpaceToLower(values.name);\n      props.addUser(randomId, name); // Create Initial state for todos\n      // props.addTodo(NaN, name, {})\n\n      routeConfig.push(\"todos/\".concat(name));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.formContainer,\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formRow,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: classes.label,\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            variant: \"outlined\",\n            value: formik.values.name,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: \"\".concat(formik.errors.name && formik.touched.name ? \"input-error\" : null, \" \").concat(classes.inputName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, _this), formik.errors.name && formik.touched.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.error,\n            children: formik.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"\".concat(!(formik.dirty && formik.isValid) ? \"disabled-btn\" : \"\", \" \").concat(classes.btnSubmit),\n        disabled: !(formik.dirty && formik.isValid),\n        endIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 20\n        }, _this),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"EBXLnrZSkL2d6QLcSqRGeD6aTBA=\", false, function () {\n  return [useStyles, useRouter, useFormik];\n});\n\n_c = Home;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos,\n    dataUser: state.dataUser\n  };\n};\n\nvar mapDispatchToProps = {\n  addTodo: addTodo,\n  setTodo: setTodo,\n  deleteTodo: deleteTodo,\n  addUser: addUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/index.tsx"],"names":["connect","addTodo","setTodo","deleteTodo","addUser","yup","useFormik","TextField","styles","makeStyles","Button","ArrowForwardIcon","useRouter","generateRandomNum","removeSpaceToLower","validationSchema","object","name","string","required","useStyles","Home","props","classes","routeConfig","formik","initialValues","onSubmit","values","randomId","push","container","formContainer","handleSubmit","formRow","formControl","label","handleChange","handleBlur","errors","touched","inputName","error","dirty","isValid","btnSubmit","mapStateToProps","state","todos","dataUser","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { ActionCreator } from 'redux';\nimport { connect } from 'react-redux';\nimport { TodosState } from '../store/reducers/todos/State';\nimport { AddTodo, addTodo, SetTodo, setTodo, DeleteTodo, deleteTodo } from '../store/actions/todos';\nimport { AddUser, addUser } from '../store/actions/dataUser';\nimport { AppState } from '../store/reducers';\nimport { useEffect } from 'react';\nimport { UserState } from '../store/reducers/dataUser/State';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './styles'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport { useRouter } from 'next/router';\nimport { generateRandomNum, removeSpaceToLower } from '../utils/utils';\n\ntype PropsFromState = {\n  todos: TodosState;\n  dataUser: UserState\n};\n\ntype PropsFromDispatch = {\n  addUser: ActionCreator<AddUser>;\n  addTodo: ActionCreator<AddTodo>;\n  setTodo: ActionCreator<SetTodo>,\n  deleteTodo: ActionCreator<DeleteTodo>\n};\n\ntype HomeProps = {} & PropsFromState & PropsFromDispatch\n\n\nconst validationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n});\n\nconst useStyles = makeStyles(styles)\n\nconst Home: React.FC<HomeProps> = (props) => {\n  const classes = useStyles()\n  const routeConfig = useRouter();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      let randomId = 0\n      let name = ''\n      randomId = generateRandomNum()\n      name = removeSpaceToLower(values.name)\n\n      props.addUser(randomId, name)\n       \n      // Create Initial state for todos\n      // props.addTodo(NaN, name, {})\n      \n      routeConfig.push(`todos/${name}`)\n    },\n  });\n\n  return (\n    <div className={classes.container}>\n      <form className={classes.formContainer} onSubmit={formik.handleSubmit}>\n        <div className={classes.formRow}>\n          <div className={classes.formControl}>\n            <label htmlFor=\"name\" className={classes.label}>Name</label>\n            <TextField\n              required\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              variant=\"outlined\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              className={\n                `${formik.errors.name && formik.touched.name ? \"input-error\" : null} ${classes.inputName}`\n              }\n            />\n            {formik.errors.name && formik.touched.name && (\n              <span className={classes.error}>{formik.errors.name}</span>\n            )}\n          </div>\n        </div>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          className={`${!(formik.dirty && formik.isValid) ? \"disabled-btn\" : \"\"} ${classes.btnSubmit}`}\n          disabled={!(formik.dirty && formik.isValid)}\n          endIcon={<ArrowForwardIcon />}\n        >\n          Next\n        </Button>\n\n      </form>\n    </div >\n  );\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    todos: state.todos,\n    dataUser: state.dataUser\n  };\n};\n\nconst mapDispatchToProps = {\n  addTodo,\n  setTodo,\n  deleteTodo,\n  addUser,\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}