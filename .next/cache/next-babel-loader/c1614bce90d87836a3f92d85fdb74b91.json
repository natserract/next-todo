{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/containers/layout.tsx\";\nimport React, { useCallback } from 'react';\nimport Header from './header';\nimport { makeStyles } from '@material-ui/core';\nimport styles from './styles';\nimport Container from '@material-ui/core/Container';\nimport { useData } from '../store/configureStore';\nimport { useRouter } from 'next/router';\nimport ActivityHeader from '../components/activity-header';\nimport { get } from '../api/API';\nimport { ACTIVITY_GROUPS, TODO_ITEMS } from '../constant/api';\nconst useStyles = makeStyles(styles);\n\nconst Layout = props => {\n  const classes = useStyles();\n  const {\n    route,\n    query\n  } = useRouter();\n  const [, setLoading,, setData] = useData();\n  const refetchData = useCallback(() => {\n    const urls = {\n      '/': ACTIVITY_GROUPS + '?email=notfound@gmail.com',\n      'activity': TODO_ITEMS + `/${query}`\n    };\n\n    const onRefetch = async () => {\n      try {\n        const _route = route.split(\"/\").find((v, index) => index == 1);\n\n        const url = urls[_route === \"\" ? \"/\" : _route];\n        const responses = await get(url);\n        setData({\n          name: '@@FetchActivity',\n          items: responses === null || responses === void 0 ? void 0 : responses.data\n        });\n        setLoading(false);\n      } catch (error) {\n        setLoading(true);\n      }\n    };\n\n    onRefetch();\n  }, [route, query]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      className: classes.layout,\n      children: [JSON.stringify(query === null || query === void 0 ? void 0 : query.slug), /*#__PURE__*/_jsxDEV(ActivityHeader, {\n        title: query === null || query === void 0 ? void 0 : query.slug,\n        onRefetch: refetchData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/containers/layout.tsx"],"names":["React","useCallback","Header","makeStyles","styles","Container","useData","useRouter","ActivityHeader","get","ACTIVITY_GROUPS","TODO_ITEMS","useStyles","Layout","props","classes","route","query","setLoading","setData","refetchData","urls","onRefetch","_route","split","find","v","index","url","responses","name","items","data","error","layout","JSON","stringify","slug","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,iBAA5C;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAACC,MAAD,CAA5B;;AAEA,MAAMS,MAAgB,GAAIC,KAAD,IAAW;AAClC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBV,SAAS,EAAlC;AAEA,QAAM,GAAGW,UAAH,GAAiBC,OAAjB,IAA4Bb,OAAO,EAAzC;AAEA,QAAMc,WAAW,GAAGnB,WAAW,CAAC,MAAM;AACpC,UAAMoB,IAAI,GAAG;AACX,WAAKX,eAAe,GAAG,2BADZ;AAEX,kBAAaC,UAAU,GAAI,IAAGM,KAAM;AAFzB,KAAb;;AAKA,UAAMK,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,MAAM,GAAGP,KAAK,CAACQ,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,IAAI,CAA7C,CAAf;;AACA,cAAMC,GAAG,GAAGP,IAAI,CAACE,MAAM,KAAK,EAAX,GAAgB,GAAhB,GAAsBA,MAAvB,CAAhB;AAEA,cAAMM,SAAS,GAAG,MAAMpB,GAAG,CAACmB,GAAD,CAA3B;AACAT,QAAAA,OAAO,CAAC;AACNW,UAAAA,IAAI,EAAE,iBADA;AAENC,UAAAA,KAAK,EAAEF,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEG;AAFZ,SAAD,CAAP;AAIAd,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAVD,CAUE,OAAOe,KAAP,EAAc;AACdf,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KAdD;;AAeAI,IAAAA,SAAS;AACV,GAtB8B,EAsB5B,CAACN,KAAD,EAAQC,KAAR,CAtB4B,CAA/B;AAwBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAEF,OAAO,CAACmB,MAA5C;AAAA,iBACGC,IAAI,CAACC,SAAL,CAAenB,KAAf,aAAeA,KAAf,uBAAeA,KAAK,CAAEoB,IAAtB,CADH,eAEE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEpB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEoB,IAA9B;AAAoC,QAAA,SAAS,EAAEjB;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGN,KAAK,CAACwB,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAxCD;;AA0CA,eAAezB,MAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport Header from './header';\nimport { makeStyles } from '@material-ui/core';\nimport styles from './styles'\nimport Container from '@material-ui/core/Container';\nimport { useData } from '../store/configureStore';\nimport { useRouter } from 'next/router';\nimport ActivityHeader from '../components/activity-header';\nimport { get } from '../api/API';\nimport { ACTIVITY_GROUPS, TODO_ITEMS } from '../constant/api';\n\nconst useStyles = makeStyles(styles);\n\nconst Layout: React.FC = (props) => {\n  const classes = useStyles()\n  const { route, query } = useRouter()\n\n  const [, setLoading, , setData] = useData()\n\n  const refetchData = useCallback(() => {\n    const urls = {\n      '/': ACTIVITY_GROUPS + '?email=notfound@gmail.com',\n      'activity':  TODO_ITEMS + `/${query}`\n    }\n\n    const onRefetch = async () => {\n      try {\n        const _route = route.split(\"/\").find((v, index) => index == 1)\n        const url = urls[_route === \"\" ? \"/\" : _route]\n\n        const responses = await get(url)\n        setData({\n          name: '@@FetchActivity',\n          items: responses?.data\n        })\n        setLoading(false)\n      } catch (error) {\n        setLoading(true)\n      }\n    }\n    onRefetch()\n  }, [route, query])\n\n  return (\n    <React.Fragment>\n      <Header />\n        <Container maxWidth=\"md\" className={classes.layout}>\n          {JSON.stringify(query?.slug)}\n          <ActivityHeader title={query?.slug} onRefetch={refetchData} />\n          {props.children}\n        </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}