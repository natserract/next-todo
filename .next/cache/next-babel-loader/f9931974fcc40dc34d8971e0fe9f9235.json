{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport EmptyItems from '../../../../components/empty-items';\nimport { TODO_ITEMS } from '../../../../constant/api';\nimport { update } from '../../../../api/API';\nconst useStyles = makeStyles(styles);\n\nconst CardItems = props => {\n  const cs = useStyles();\n  const checkedRef = useRef({});\n  const {\n    0: checkedState,\n    1: setCheckedState\n  } = useState({});\n  const newCheckRef = useRef({}); // Create initial state for checkBox\n\n  useEffect(() => {\n    Object.keys(props.items).map(v => {\n      checkedRef.current[`checked_${props.items[v].id}`] = props.items[v]['is_active'] === 0;\n    });\n    console.log('props.items', props.items);\n    setCheckedState(_objectSpread({}, checkedRef.current));\n  }, [props.items]);\n\n  const handleCheckChange = event => {\n    const id = event.target.name.split('_')[1];\n    const value = +event.target.checked;\n    setCheckedState(_objectSpread(_objectSpread({}, checkedState), {}, {\n      [event.target.name]: event.target.checked\n    }));\n    newCheckRef.current = {\n      id,\n      value\n    };\n  };\n\n  useEffect(() => {\n    console.log('newCheckRef.current', newCheckRef.current);\n    const {\n      id,\n      value\n    } = newCheckRef.current;\n    const url = TODO_ITEMS + `/${id}`;\n\n    const onUpdate = async () => {\n      try {\n        await update(url, {\n          \"is_active\": value\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    onUpdate();\n  }, [checkedState]);\n\n  const handleDelete = () => {};\n\n  const renderItems = () => {\n    if (props.itemEmpty) return /*#__PURE__*/_jsxDEV(EmptyItems, {\n      path: \"../todo-empty-state.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }, this);\n    return props.items.map((v, idx) => {\n      const key = `checked_${v.id}`;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: cs.root,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"priority\",\n            className: cs.prior,\n            style: {\n              background: mappingColorPriority(v.priority)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: cs.formLabel,\n            control:\n            /*#__PURE__*/\n            // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n            // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n            _jsxDEV(Checkbox, {\n              color: \"primary\",\n              checked: !!checkedState[key],\n              onChange: handleCheckChange,\n              name: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this),\n            label: v.title\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), JSON.stringify(props.items[idx].is_active), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleDelete,\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: renderItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 10\n  }, this);\n};\n\nexport default CardItems;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx"],"names":["useState","useRef","useEffect","makeStyles","Card","FormControlLabel","Checkbox","styles","React","Grid","IconButton","DeleteOutlineIcon","mappingColorPriority","EmptyItems","TODO_ITEMS","update","useStyles","CardItems","props","cs","checkedRef","checkedState","setCheckedState","newCheckRef","Object","keys","items","map","v","current","id","console","log","handleCheckChange","event","target","name","split","value","checked","url","onUpdate","error","handleDelete","renderItems","itemEmpty","idx","key","root","prior","background","priority","formLabel","title","JSON","stringify","is_active"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles'\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport EmptyItems from '../../../../components/empty-items';\nimport { TODO_ITEMS } from '../../../../constant/api';\nimport { update } from '../../../../api/API';\n\ntype Props = {\n  items: Array<any>;\n  itemEmpty: boolean;\n  setItemEmpty: Function;\n}\n\nconst useStyles = makeStyles(styles)\n\nconst CardItems: React.FC<Props> = (props) => {\n  const cs = useStyles()\n  const checkedRef = useRef({})\n  const [checkedState, setCheckedState] = useState({});\n\n  const newCheckRef = useRef({})\n\n  // Create initial state for checkBox\n  useEffect(() => {\n    Object.keys(props.items).map(v => {\n      checkedRef.current[`checked_${props.items[v].id}`] = props.items[v]['is_active'] === 0\n    })\n\n    console.log('props.items', props.items)\n    setCheckedState({ ...checkedRef.current })\n  }, [props.items])\n\n  const handleCheckChange = (event) => {\n    const id = event.target.name.split('_')[1]\n    const value = +event.target.checked\n    setCheckedState({ ...checkedState, [event.target.name]: event.target.checked });\n    newCheckRef.current = {\n      id,\n      value\n    }\n  };\n\n  useEffect(() => {\n    console.log('newCheckRef.current', newCheckRef.current)\n    const { id, value } = newCheckRef.current\n    const url = TODO_ITEMS + `/${id}`\n    \n    const onUpdate = async () => {\n      try {\n        await update(url, {\n          \"is_active\": value,\n        })\n\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    onUpdate()\n  }, [checkedState])\n\n  const handleDelete = () => {\n\n  }\n\n  const renderItems = () => {\n    if (props.itemEmpty) return <EmptyItems path=\"../todo-empty-state.png\" />\n\n    return props.items.map((v, idx) => {\n      const key = `checked_${v.id}`\n\n      return (\n        <Grid item sm={12} key={key}>\n          <Card className={cs.root}>\n            <span\n              role=\"priority\"\n              className={cs.prior}\n              style={{ background: mappingColorPriority(v.priority) }}\n            />\n\n            <FormControlLabel\n              className={cs.formLabel}\n              key={idx}\n              control={\n                // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n                // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n                <Checkbox\n                  color=\"primary\"\n                  checked={!!checkedState[key]}\n                  onChange={handleCheckChange}\n                  name={key}\n                />\n              }\n              label={v.title}\n            />\n\n            {JSON.stringify(props.items[idx].is_active)}\n\n            <IconButton onClick={handleDelete} aria-label=\"delete\">\n              <DeleteOutlineIcon />\n            </IconButton>\n          </Card>\n        </Grid>\n      )\n    })\n  }\n\n  return <React.Fragment children={renderItems()} />\n}\n\nexport default CardItems"]},"metadata":{},"sourceType":"module"}