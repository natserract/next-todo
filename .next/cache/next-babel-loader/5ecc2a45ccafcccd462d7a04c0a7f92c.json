{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { get } from '../api/API';\nimport { ACTIVITY_GROUPS } from '../constant/api';\nimport { useData } from '../store/configureStore';\nexport const useRefetch = (url = ACTIVITY_GROUPS + '?email=notfound@gmail.com') => {\n  const {\n    0: doRefetch,\n    1: setDoRefetch\n  } = useState(false);\n  const [, setLoading,, setData] = useData();\n\n  const onRefetch = async () => {\n    try {\n      const responses = await get(url);\n      setData({\n        name: '@@FetchActivity',\n        items: responses === null || responses === void 0 ? void 0 : responses.data\n      });\n      setLoading(false);\n    } catch (error) {\n      setLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    if (doRefetch) onRefetch();\n  }, [doRefetch]);\n  return {\n    setDoRefetch\n  };\n};","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/hooks/useRefetch.ts"],"names":["useEffect","useState","get","ACTIVITY_GROUPS","useData","useRefetch","url","doRefetch","setDoRefetch","setLoading","setData","onRefetch","responses","name","items","data","error"],"mappings":"AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,GAAG,GAAGH,eAAe,GAAG,2BAAzB,KAAyD;AACjF,QAAM;AAAA,OAACI,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,GAAGQ,UAAH,GAAiBC,OAAjB,IAA4BN,OAAO,EAAzC;;AAEA,QAAMO,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,SAAS,GAAG,MAAMV,GAAG,CAACI,GAAD,CAA3B;AACAI,MAAAA,OAAO,CAAC;AACNG,QAAAA,IAAI,EAAE,iBADA;AAENC,QAAAA,KAAK,EAAEF,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEG;AAFZ,OAAD,CAAP;AAIAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPD,CAOE,OAAOO,KAAP,EAAc;AACdP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAXD;;AAaAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,SAAJ,EAAeI,SAAS;AACzB,GAFQ,EAEN,CAACJ,SAAD,CAFM,CAAT;AAIA,SAAO;AACLC,IAAAA;AADK,GAAP;AAGD,CAxBM","sourcesContent":["import Axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport { get } from '../api/API'\nimport { ACTIVITY_GROUPS } from '../constant/api'\nimport { useData } from '../store/configureStore'\n\nexport const useRefetch = (url = ACTIVITY_GROUPS + '?email=notfound@gmail.com') => {\n  const [doRefetch, setDoRefetch] = useState(false)\n  const [, setLoading, , setData] = useData()\n\n  const onRefetch = async () => {\n    try {\n      const responses = await get(url)\n      setData({\n        name: '@@FetchActivity',\n        items: responses?.data\n      })\n      setLoading(false)\n    } catch (error) {\n      setLoading(true)\n    }\n  }\n  \n  useEffect(() => {\n    if (doRefetch) onRefetch()\n  }, [doRefetch])\n\n  return {\n    setDoRefetch,\n  }\n}"]},"metadata":{},"sourceType":"module"}