{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/card-items/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst useStyles = makeStyles(styles);\n\nconst CardItems = () => {\n  const cs = useStyles();\n  const {\n    0: items,\n    1: setItems\n  } = useState([{\n    id: '1',\n    name: 'Telur Ayam',\n    priority: '1'\n  }, {\n    id: '2',\n    name: 'Beras 5kg',\n    priority: '1'\n  }]);\n  const checkedRef = useRef({});\n  const {\n    0: checkedState,\n    1: setCheckedState\n  } = useState({}); // Create initial state for checkBox\n\n  useEffect(() => {\n    Object.keys(items).map(v => {\n      checkedRef.current[`checked_${items[v].id}`] = false;\n    });\n    setCheckedState(_objectSpread({}, checkedRef.current));\n  }, []);\n\n  const handleCheckChange = event => {\n    setCheckedState(_objectSpread(_objectSpread({}, checkedState), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  const handleDelete = () => {};\n\n  const renderItems = () => {\n    return items.map((v, idx) => {\n      const key = `checked_${v.id}`;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: cs.root,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: cs.formLabel,\n            control:\n            /*#__PURE__*/\n            // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n            // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n            _jsxDEV(Checkbox, {\n              checked: !!checkedState[key],\n              onChange: handleCheckChange,\n              name: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this),\n            label: v.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleDelete,\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: renderItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 10\n  }, this);\n};\n\nexport default CardItems;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/card-items/index.tsx"],"names":["useState","useRef","useEffect","makeStyles","Card","FormControlLabel","Checkbox","styles","React","Grid","IconButton","DeleteIcon","useStyles","CardItems","cs","items","setItems","id","name","priority","checkedRef","checkedState","setCheckedState","Object","keys","map","v","current","handleCheckChange","event","target","checked","handleDelete","renderItems","idx","key","root","formLabel"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles'\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(styles)\n\nconst CardItems = () => {\n  const cs = useStyles()\n\n  const [items, setItems] = useState([\n    {\n      id: '1',\n      name: 'Telur Ayam',\n      priority: '1'\n    },\n    {\n      id: '2',\n      name: 'Beras 5kg',\n      priority: '1'\n    },\n  ])\n  const checkedRef = useRef({})\n  const [checkedState, setCheckedState] = useState({});\n\n  // Create initial state for checkBox\n  useEffect(() => {\n    Object.keys(items).map(v => {\n      checkedRef.current[`checked_${items[v].id}`] = false\n    })\n\n    setCheckedState({ ...checkedRef.current })\n  }, [])\n\n  const handleCheckChange = (event) => {\n    setCheckedState({ ...checkedState, [event.target.name]: event.target.checked });\n  };\n\n  const handleDelete = () => {\n\n  }\n\n  const renderItems = () => {\n    return items.map((v, idx) => {\n      const key = `checked_${v.id}`\n\n      return (\n        <Grid item sm={12} key={key}>\n          <Card className={cs.root}>\n            <FormControlLabel\n              className={cs.formLabel}\n              key={idx}\n              control={\n                // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n                // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n                <Checkbox\n                  checked={!!checkedState[key]}\n                  onChange={handleCheckChange}\n                  name={key}\n                />\n              }\n              label={v.name}\n            />\n\n            <IconButton onClick={handleDelete} aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Card>\n        </Grid>\n      )\n    })\n  }\n\n  return <React.Fragment children={renderItems()} />\n}\n\nexport default CardItems"]},"metadata":{},"sourceType":"module"}