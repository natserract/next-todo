{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/components/alert/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Fade from '@material-ui/core/Fade';\nimport styles from './styles';\nimport { useEffect } from 'react';\nvar useStyles = makeStyles(styles);\n\nvar Alert = function Alert(_ref) {\n  _s();\n\n  var title = _ref.title,\n      visibleAlert = _ref.visibleAlert,\n      setVisibleAlert = _ref.setVisibleAlert;\n  var classes = useStyles();\n\n  var handleAlert = function handleAlert() {\n    setVisibleAlert(false);\n  }; // Give a alert timeout\n\n\n  useEffect(function () {\n    var timerFunc = setTimeout(function () {\n      setVisibleAlert(false);\n    }, 3000);\n    return function () {\n      return clearTimeout(timerFunc);\n    };\n  }, [visibleAlert]);\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    \"in\": visibleAlert,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"alert\",\n      className: classes.alertRoot,\n      onClick: handleAlert,\n      children: [/*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.title,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Alert, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Alert;\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/components/alert/index.tsx"],"names":["makeStyles","ErrorOutlineIcon","Fade","styles","useEffect","useStyles","Alert","title","visibleAlert","setVisibleAlert","classes","handleAlert","timerFunc","setTimeout","clearTimeout","alertRoot","icon"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAQA,IAAMC,SAAS,GAAGL,UAAU,CAACG,MAAD,CAA5B;;AAEA,IAAMG,KAAsB,GAAG,SAAzBA,KAAyB,OAA8C;AAAA;;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,YAAoC,QAApCA,YAAoC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AAC3E,MAAMC,OAAO,GAAGL,SAAS,EAAzB;;AAEA,MAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD,CAH2E,CAO3E;;;AACAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,SAAS,GAAGC,UAAU,CAAC,YAAM;AAC/BJ,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAFyB,EAEvB,IAFuB,CAA1B;AAIA,WAAO;AAAA,aAAMK,YAAY,CAACF,SAAD,CAAlB;AAAA,KAAP;AACD,GANQ,EAMN,CAACJ,YAAD,CANM,CAAT;AAQA,sBACE,QAAC,IAAD;AAAM,UAAIA,YAAV;AAAA,2BACE;AAAK,MAAA,IAAI,EAAC,OAAV;AAAkB,MAAA,SAAS,EAAEE,OAAO,CAACK,SAArC;AAAgD,MAAA,OAAO,EAAEJ,WAAzD;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAED,OAAO,CAACM;AAArC;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,SAAS,EAAEN,OAAO,CAACH,KAAzB;AAAA,kBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAxBD;;GAAMD,K;UACYD,S;;;KADZC,K;AA0BN,eAAeA,KAAf","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Fade from '@material-ui/core/Fade';\nimport styles from './styles'\nimport { useEffect } from 'react';\n\ntype Props = {\n  title: string\n  visibleAlert: boolean;\n  setVisibleAlert: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst useStyles = makeStyles(styles)\n\nconst Alert: React.FC<Props> = ({ title, visibleAlert, setVisibleAlert }) => {\n  const classes = useStyles()\n\n  const handleAlert = () => {\n    setVisibleAlert(false)\n  }\n\n  // Give a alert timeout\n  useEffect(() => {\n    let timerFunc = setTimeout(() => {\n      setVisibleAlert(false)\n    }, 3000);\n\n    return () => clearTimeout(timerFunc);\n  }, [visibleAlert])\n\n  return (\n    <Fade in={visibleAlert}>\n      <div role=\"alert\" className={classes.alertRoot} onClick={handleAlert}>\n        <ErrorOutlineIcon className={classes.icon} />\n        <span className={classes.title}>{title}</span>\n      </div>\n    </Fade>\n  )\n}\n\nexport default Alert"]},"metadata":{},"sourceType":"module"}