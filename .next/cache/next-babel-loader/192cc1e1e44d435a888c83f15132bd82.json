{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\";\nimport styles from './styles';\nimport ActivityHeader from '../../../components/activity-header';\nimport ActivityPopup from '../../activityPopup';\nvar useStyles = makeStyles(styles);\n\nvar DetailActivity = function DetailActivity() {\n  _s();\n\n  var _router$query;\n\n  var cs = useStyles();\n  var router = useRouter();\n\n  var _useState = useState(false),\n      addActivityDialog = _useState[0],\n      setAddActivityDialog = _useState[1];\n\n  var _useState2 = useState(false),\n      editActivityDialog = _useState2[0],\n      setEditActivityDialog = _useState2[1];\n\n  var fetchData = function fetchData() {\n    // const url = ACTIVITY_GROUPS + '?email=notfound@gmail.com'\n    var onFetch = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function onFetch() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    onFetch();\n  };\n\n  useEffect(fetchData, []);\n  useEffect(function () {\n    console.log('router', router);\n  }, [router]);\n\n  var renderChildDialog = function renderChildDialog() {\n    if (addActivityDialog) return /*#__PURE__*/_jsxDEV(ActivityPopup, {\n      initialValues: {\n        activityName: ''\n      },\n      openDialog: addActivityDialog,\n      setOpenDialog: setAddActivityDialog,\n      onRefetch: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this);\n    return /*#__PURE__*/_jsxDEV(ActivityPopup, {\n      initialValues: {\n        activityName: \"Update\"\n      },\n      openDialog: editActivityDialog,\n      setOpenDialog: setEditActivityDialog,\n      onRefetch: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"detailActivity\",\n    children: /*#__PURE__*/_jsxDEV(ActivityHeader, {\n      title: router === null || router === void 0 ? void 0 : (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.slug,\n      onClick: function onClick() {\n        return setAddActivityDialog(true);\n      },\n      onUpdate: function onUpdate() {\n        return setEditActivityDialog(true);\n      },\n      children: renderChildDialog()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DetailActivity, \"M4M2+LwLNLFIHdUQ3zNCT7SsPno=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = DetailActivity;\nexport default DetailActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailActivity\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx"],"names":["React","useEffect","useState","makeStyles","useRouter","styles","ActivityHeader","ActivityPopup","useStyles","DetailActivity","cs","router","addActivityDialog","setAddActivityDialog","editActivityDialog","setEditActivityDialog","fetchData","onFetch","console","log","renderChildDialog","activityName","query","slug"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAACE,MAAD,CAA5B;;AAEA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA;;AAC3B,MAAMC,EAAE,GAAGF,SAAS,EAApB;AACA,MAAMG,MAAM,GAAGP,SAAS,EAAxB;;AAF2B,kBAIuBF,QAAQ,CAAC,KAAD,CAJ/B;AAAA,MAIpBU,iBAJoB;AAAA,MAIDC,oBAJC;;AAAA,mBAKyBX,QAAQ,CAAC,KAAD,CALjC;AAAA,MAKpBY,kBALoB;AAAA,MAKAC,qBALA;;AAO3B,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB;AAEA,QAAMC,OAAO;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAPA,OAAO;AAAA;AAAA;AAAA,OAAb;;AAaAA,IAAAA,OAAO;AACR,GAjBD;;AAmBAhB,EAAAA,SAAS,CAACe,SAAD,EAAY,EAAZ,CAAT;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,MAAtB;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,MAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,QAAIR,iBAAJ,EAAuB,oBACrB,QAAC,aAAD;AACE,MAAA,aAAa,EAAE;AAAES,QAAAA,YAAY,EAAE;AAAhB,OADjB;AAEE,MAAA,UAAU,EAAET,iBAFd;AAGE,MAAA,aAAa,EAAEC,oBAHjB;AAIE,MAAA,SAAS,EAAEG;AAJb;AAAA;AAAA;AAAA;AAAA,aADqB;AASvB,wBACE,QAAC,aAAD;AACE,MAAA,aAAa,EAAE;AAAEK,QAAAA,YAAY,EAAE;AAAhB,OADjB;AAEE,MAAA,UAAU,EAAEP,kBAFd;AAGE,MAAA,aAAa,EAAEC,qBAHjB;AAIE,MAAA,SAAS,EAAEC;AAJb;AAAA;AAAA;AAAA;AAAA,aADF;AAQD,GAlBD;;AAoBA,sBACE;AAAK,IAAA,IAAI,EAAC,gBAAV;AAAA,2BACE,QAAC,cAAD;AACE,MAAA,KAAK,EAAEL,MAAF,aAAEA,MAAF,wCAAEA,MAAM,CAAEW,KAAV,kDAAE,cAAeC,IADxB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMV,oBAAoB,CAAC,IAAD,CAA1B;AAAA,OAFX;AAGE,MAAA,QAAQ,EAAE;AAAA,eAAME,qBAAqB,CAAC,IAAD,CAA3B;AAAA,OAHZ;AAIE,MAAA,QAAQ,EAAEK,iBAAiB;AAJ7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CA9DD;;GAAMX,c;UACOD,S,EACIJ,S;;;KAFXK,c;AAgEN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\"\nimport styles from './styles'\nimport ActivityHeader from '../../../components/activity-header';\nimport ActivityPopup from '../../activityPopup';\n\nconst useStyles = makeStyles(styles)\n\nconst DetailActivity = () => {\n  const cs = useStyles()\n  const router = useRouter()\n\n  const [addActivityDialog, setAddActivityDialog] = useState(false);\n  const [editActivityDialog, setEditActivityDialog] = useState(false);\n\n  const fetchData = () => {\n    // const url = ACTIVITY_GROUPS + '?email=notfound@gmail.com'\n\n    const onFetch = async () => {\n      //   try {\n      //     const responses = await get(url)\n      //     setData({\n      //       name: '@@FetchActivity',\n      //       items: responses?.data\n      //     })\n      //     setLoading(false)\n      //   } catch (error) {\n      //     setLoading(true)\n      //   }\n    }\n\n    onFetch()\n  }\n\n  useEffect(fetchData, []);\n\n  useEffect(() => {\n    console.log('router', router)\n  }, [router])\n\n  const renderChildDialog = () => {\n    if (addActivityDialog) return (\n      <ActivityPopup\n        initialValues={{ activityName: '' }}\n        openDialog={addActivityDialog}\n        setOpenDialog={setAddActivityDialog}\n        onRefetch={fetchData}\n      />\n    )\n\n    return (\n      <ActivityPopup\n        initialValues={{ activityName: \"Update\" }}\n        openDialog={editActivityDialog}\n        setOpenDialog={setEditActivityDialog}\n        onRefetch={fetchData}\n      />\n    )\n  }\n\n  return (\n    <div role=\"detailActivity\">\n      <ActivityHeader\n        title={router?.query?.slug}\n        onClick={() => setAddActivityDialog(true)}\n        onUpdate={() => setEditActivityDialog(true)}\n        children={renderChildDialog()}\n      />\n    </div>\n  )\n}\n\nexport default DetailActivity"]},"metadata":{},"sourceType":"module"}