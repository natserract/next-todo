{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\";\nimport styles from './styles';\nimport ActivityHeader from '../../../components/activity-header';\nimport ActivityPopup from '../../activityPopup';\nimport { ACTIVITY_GROUPS } from '../../../constant/api';\nimport { get } from '../../../api/API';\nvar useStyles = makeStyles(styles);\n\nvar DetailActivity = function DetailActivity() {\n  _s();\n\n  var cs = useStyles();\n  var router = useRouter();\n\n  var _useState = useState({\n    title: ''\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      addActivityDialog = _useState2[0],\n      setAddActivityDialog = _useState2[1];\n\n  var _useState3 = useState(false),\n      editActivityDialog = _useState3[0],\n      setEditActivityDialog = _useState3[1];\n\n  var fetchDataById = function fetchDataById() {\n    var _router$query;\n\n    var url = ACTIVITY_GROUPS + \"/\".concat((_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id);\n\n    var onFetch = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var responses;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return get(url);\n\n              case 3:\n                responses = _context.sent;\n                setData({\n                  title: responses === null || responses === void 0 ? void 0 : responses.title\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function onFetch() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    onFetch();\n  };\n\n  useEffect(fetchDataById, []);\n\n  var renderChildDialog = function renderChildDialog() {\n    if (addActivityDialog && !editActivityDialog) return /*#__PURE__*/_jsxDEV(ActivityPopup, {\n      type: \"add\",\n      title: \"Tambah Activity\",\n      initialValues: {\n        activityName: ''\n      },\n      openDialog: addActivityDialog,\n      setOpenDialog: setAddActivityDialog,\n      onRefetch: fetchDataById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this);\n    if (editActivityDialog && !addActivityDialog) return /*#__PURE__*/_jsxDEV(ActivityPopup, {\n      type: \"edit\",\n      title: \"Edit Activity\",\n      initialValues: {\n        activityName: data === null || data === void 0 ? void 0 : data.title\n      },\n      openDialog: editActivityDialog,\n      setOpenDialog: setEditActivityDialog,\n      onRefetch: fetchDataById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"detailActivity\",\n    children: /*#__PURE__*/_jsxDEV(ActivityHeader, {\n      title: data === null || data === void 0 ? void 0 : data.title,\n      onClick: function onClick() {\n        return setAddActivityDialog(true);\n      },\n      onUpdate: function onUpdate() {\n        return setEditActivityDialog(true);\n      },\n      children: renderChildDialog()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DetailActivity, \"jmMK5hRJOp082zEAqNM1oWlohjI=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = DetailActivity;\nexport default DetailActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailActivity\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx"],"names":["React","useEffect","useState","makeStyles","useRouter","styles","ActivityHeader","ActivityPopup","ACTIVITY_GROUPS","get","useStyles","DetailActivity","cs","router","title","data","setData","addActivityDialog","setAddActivityDialog","editActivityDialog","setEditActivityDialog","fetchDataById","url","query","id","onFetch","responses","console","error","renderChildDialog","activityName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\"\nimport styles from './styles'\nimport ActivityHeader from '../../../components/activity-header';\nimport ActivityPopup from '../../activityPopup';\nimport { ACTIVITY_GROUPS } from '../../../constant/api';\nimport { get } from '../../../api/API';\n\nconst useStyles = makeStyles(styles)\n\nconst DetailActivity = () => {\n  const cs = useStyles()\n  const router = useRouter()\n\n  const [data, setData] = useState({\n    title: '',\n  })\n  const [addActivityDialog, setAddActivityDialog] = useState(false);\n  const [editActivityDialog, setEditActivityDialog] = useState(false);\n\n  const fetchDataById = () => {\n    const url = ACTIVITY_GROUPS + `/${router.query?.id}`\n\n    const onFetch = async () => {\n        try {\n          const responses = await get(url)\n          setData({\n            title: responses?.title\n          })\n        } catch (error) {\n          console.error(error)\n        }\n    }\n\n    onFetch()\n  }\n\n  useEffect(fetchDataById, []);\n\n  const renderChildDialog = () => {\n    if (addActivityDialog && !editActivityDialog) return (\n      <ActivityPopup\n        type=\"add\"\n        title=\"Tambah Activity\"\n        initialValues={{ activityName: '' }}\n        openDialog={addActivityDialog}\n        setOpenDialog={setAddActivityDialog}\n        onRefetch={fetchDataById}\n      />\n    )\n\n    if (editActivityDialog && !addActivityDialog) return (\n      <ActivityPopup\n        type=\"edit\"\n        title=\"Edit Activity\"\n        initialValues={{ activityName: data?.title }}\n        openDialog={editActivityDialog}\n        setOpenDialog={setEditActivityDialog}\n        onRefetch={fetchDataById}\n      />\n    )\n\n    return <React.Fragment />\n  }\n\n  return (\n    <div role=\"detailActivity\">\n      <ActivityHeader\n        title={data?.title}\n        onClick={() => setAddActivityDialog(true)}\n        onUpdate={() => setEditActivityDialog(true)}\n        children={renderChildDialog()}\n      />\n    </div>\n  )\n}\n\nexport default DetailActivity"]},"metadata":{},"sourceType":"module"}