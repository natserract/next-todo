{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/components/activity-popup/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useRouter } from 'next/router';\nimport { post, update } from '../../api/API';\nimport { ACTIVITY_GROUPS } from '../../constant/api';\nvar validationSchema = yup.object({\n  activityName: yup.string().required()\n});\nvar useStyles = makeStyles(styles);\n\nvar ActivityPopup = function ActivityPopup(props) {\n  _s();\n\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    return console.log('router', router);\n  }, [router]);\n  var formik = useFormik({\n    initialValues: _objectSpread({}, props.initialValues),\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      var _ref = values,\n          activityName = _ref.activityName;\n      handlePostData(activityName);\n    }\n  });\n  var handlePostData = useCallback(function (title) {\n    var _router$query;\n\n    var isAddAction = props.type === 'add';\n    var url = isAddAction ? ACTIVITY_GROUPS : ACTIVITY_GROUPS + \"/\".concat((_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id);\n    var manual = {\n      email: \"notfound@gmail.com\",\n      comment: \"Comment confirmed!\"\n    };\n\n    var changeUrl = function changeUrl() {\n      var _router$query2;\n\n      var prevSlug = (_router$query2 = router.query) === null || _router$query2 === void 0 ? void 0 : _router$query2.slug[0];\n      var prevUrl = router.asPath;\n      var newUrl = prevUrl.replace(prevSlug, title);\n      console.log('newUrl', newUrl); // router.replace(ro)\n    };\n\n    var onPost = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!isAddAction) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return post(url, _objectSpread({\n                  title: title\n                }, manual));\n\n              case 4:\n                _context.next = 8;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return update(url, _objectSpread({\n                  title: title\n                }, manual));\n\n              case 8:\n                setLoading(false);\n                formik.resetForm();\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                setLoading(true);\n\n              case 15:\n                _context.prev = 15;\n                handleClose();\n                props.onRefetch();\n                changeUrl();\n                return _context.finish(15);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 12, 15, 20]]);\n      }));\n\n      return function onPost() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    onPost();\n  }, [props.onRefetch, props.type]);\n\n  var handleClose = function handleClose() {\n    props.setOpenDialog(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    className: classes.dialog,\n    open: props.openDialog,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      className: classes.dialogTitle,\n      children: [props.title, /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        className: classes.closeButton,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      className: classes.dialogContent,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"activityName\",\n            children: \"Nama Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            rows: 4,\n            name: \"activityName\",\n            placeholder: \"Tambahkan nama activity\",\n            value: formik.values.activityName,\n            variant: \"outlined\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            autoFocus: true,\n            className: \"\".concat(formik.errors.activityName && formik.touched.activityName ? classes.formikErrors : null, \" \").concat(classes.activityNameInput),\n            autoComplete: \"off\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: function onClick() {\n          return formik.handleSubmit();\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 23\n        }, _this), \" Simpan\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActivityPopup, \"N439G47bQkSO6gShurRxGvUXy0o=\", false, function () {\n  return [useStyles, useRouter, useFormik];\n});\n\n_c = ActivityPopup;\nexport default ActivityPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityPopup\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/components/activity-popup/index.tsx"],"names":["React","useCallback","useEffect","useState","makeStyles","TextField","Dialog","Button","styles","DialogTitle","DialogContent","DialogActions","IconButton","CloseIcon","yup","useFormik","CircularProgress","useRouter","post","update","ACTIVITY_GROUPS","validationSchema","object","activityName","string","required","useStyles","ActivityPopup","props","classes","router","loading","setLoading","console","log","formik","initialValues","onSubmit","values","handlePostData","title","isAddAction","type","url","query","id","manual","email","comment","changeUrl","prevSlug","slug","prevUrl","asPath","newUrl","replace","onPost","resetForm","handleClose","onRefetch","setOpenDialog","dialog","openDialog","dialogTitle","closeButton","dialogContent","handleSubmit","formGroup","handleChange","handleBlur","errors","touched","formikErrors","activityNameInput"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useRouter } from 'next/router';\nimport { post, update } from '../../api/API';\nimport { ACTIVITY_GROUPS } from '../../constant/api';\n\ntype Props = {\n  type: 'add' | 'edit',\n  openDialog: boolean;\n  title: string;\n  setOpenDialog: Function;\n  onRefetch: Function\n  initialValues: {\n    activityName: string;\n  };\n}\n\nconst validationSchema = yup.object({\n  activityName: yup.string().required(),\n});\n\nconst useStyles = makeStyles(styles);\n\nconst ActivityPopup: React.FC<Props> = (props) => {\n  const classes = useStyles()\n  const router = useRouter()\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => console.log('router', router), [router])\n\n  const formik = useFormik({\n    initialValues: {\n      ...props.initialValues\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      const { activityName } = values!!\n\n      handlePostData(activityName)\n    },\n  })\n\n  const handlePostData = useCallback((title: string) => {\n    const isAddAction = props.type === 'add'\n    const url = isAddAction ? ACTIVITY_GROUPS : ACTIVITY_GROUPS + `/${router.query?.id}`\n\n    const manual = {\n      email: \"notfound@gmail.com\",\n      comment: \"Comment confirmed!\"\n    }\n\n    const changeUrl = () => {\n      const prevSlug = router.query?.slug[0]\n      const prevUrl = router.asPath\n\n      const newUrl = prevUrl.replace(prevSlug, title)\n      console.log('newUrl', newUrl)\n      // router.replace(ro)\n    }\n\n    const onPost = async () => {\n      try {\n        isAddAction ? \n          await post(url, {\n            title,\n            ...manual,\n          }) : \n          await update(url, {\n            title,\n            ...manual,\n          })\n\n        setLoading(false)\n        formik.resetForm()\n      }\n      catch (error) {\n        setLoading(true)\n      }\n      finally {\n        handleClose()\n        props.onRefetch()\n        changeUrl()\n      }\n    }\n\n    onPost()\n  }, [props.onRefetch, props.type])\n\n  const handleClose = () => {\n    props.setOpenDialog(false);\n  };\n\n  return (\n    <Dialog className={classes.dialog} open={props.openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>\n        {props.title}\n\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.dialogContent}>\n        <form onSubmit={formik.handleSubmit}>\n          <div className={classes.formGroup}>\n            <label htmlFor=\"activityName\">Nama Activity</label>\n            <TextField\n              rows={4}\n              name=\"activityName\"\n              placeholder=\"Tambahkan nama activity\"\n              value={formik.values.activityName}\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              autoFocus\n              className={\n                `${formik.errors.activityName && formik.touched.activityName ? classes.formikErrors : null} ${classes.activityNameInput}`\n              }\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n        </form>\n      </DialogContent>\n\n      <DialogActions>\n        <Button type=\"submit\" onClick={() => formik.handleSubmit()} variant=\"contained\" color=\"primary\">\n          {loading && <CircularProgress color=\"secondary\" />} Simpan\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ActivityPopup"]},"metadata":{},"sourceType":"module"}