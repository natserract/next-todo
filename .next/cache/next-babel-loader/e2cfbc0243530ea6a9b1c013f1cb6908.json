{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\";\nimport styles from './styles';\nimport ActivityHeader from '../../../components/activity-header';\nimport ActivityPopup from '../../activityPopup';\nimport { ACTIVITY_GROUPS } from '../../../constant/api';\nimport { get } from '../../../api/API';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(styles);\n\nconst DetailActivity = () => {\n  const cs = useStyles();\n  const router = useRouter();\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    title: ''\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: addActivityDialog,\n    1: setAddActivityDialog\n  } = useState(false);\n  const {\n    0: editActivityDialog,\n    1: setEditActivityDialog\n  } = useState(false);\n  const {\n    0: items,\n    1: setItems\n  } = useState([{\n    id: '1',\n    name: 'Telur Ayam',\n    priority: '1'\n  }, {\n    id: '2',\n    name: 'Beras 5kg',\n    priority: '1'\n  }]);\n  const [checkedState, setCheckedState] = React.useState({});\n  const checkedRef = useRef({});\n\n  const fetchDataById = () => {\n    var _router$query;\n\n    const url = ACTIVITY_GROUPS + `/${(_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id}`;\n    const obj = {};\n\n    const onFetch = async () => {\n      try {\n        const responses = await get(url);\n        setData({\n          title: responses === null || responses === void 0 ? void 0 : responses.title\n        });\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n        setLoading(true);\n      }\n    };\n\n    onFetch();\n  };\n\n  useEffect(fetchDataById, []);\n  useEffect(() => {\n    Object.keys(items).map(v => {\n      var _items$v;\n\n      checkedRef.current[`checked_${(_items$v = items[v]) === null || _items$v === void 0 ? void 0 : _items$v.id}`] = false; // setCheckedState({\n      //   ...checkedState,\n      //   : false\n      // })\n    });\n    console.log('checkedRef', checkedRef.current);\n  }, []);\n\n  const renderChildDialog = () => {\n    if (editActivityDialog) return /*#__PURE__*/_jsxDEV(ActivityPopup, {\n      type: \"edit\",\n      title: \"Edit Activity\",\n      initialValues: {\n        activityName: data === null || data === void 0 ? void 0 : data.title\n      },\n      openDialog: editActivityDialog,\n      setOpenDialog: setEditActivityDialog,\n      onRefetch: fetchDataById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  };\n\n  const handleCheckChange = event => {// setCheckedState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"detailActivity\",\n    children: [JSON.stringify(checkedState), /*#__PURE__*/_jsxDEV(ActivityHeader, {\n      title: (data === null || data === void 0 ? void 0 : data.title) || \"Loading...\",\n      onClick: console.log,\n      onUpdate: () => setEditActivityDialog(true),\n      children: renderChildDialog()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"stretch\",\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: false,\n          onChange: handleCheckChange,\n          name: \"checkedF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this),\n        label: \"Telur Ayam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DetailActivity;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/index.tsx"],"names":["React","useEffect","useRef","useState","makeStyles","useRouter","styles","ActivityHeader","ActivityPopup","ACTIVITY_GROUPS","get","Grid","FormControlLabel","Checkbox","useStyles","DetailActivity","cs","router","data","setData","title","loading","setLoading","addActivityDialog","setAddActivityDialog","editActivityDialog","setEditActivityDialog","items","setItems","id","name","priority","checkedState","setCheckedState","checkedRef","fetchDataById","url","query","obj","onFetch","responses","error","console","Object","keys","map","v","current","log","renderChildDialog","activityName","handleCheckChange","event","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAACE,MAAD,CAA5B;;AAEA,MAAMS,cAAc,GAAG,MAAM;AAC3B,QAAMC,EAAE,GAAGF,SAAS,EAApB;AACA,QAAMG,MAAM,GAAGZ,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACa,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,QAAQ,CAAC;AAAEiB,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACoB,iBAAD;AAAA,OAAoBC;AAApB,MAA4CrB,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAA,OAACsB,kBAAD;AAAA,OAAqBC;AAArB,MAA8CvB,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAM;AAAA,OAACwB,KAAD;AAAA,OAAQC;AAAR,MAAoBzB,QAAQ,CAAC,CACjC;AACE0B,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GANiC,CAAD,CAAlC;AAYA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjC,KAAK,CAACG,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM+B,UAAU,GAAGhC,MAAM,CAAC,EAAD,CAAzB;;AAEA,QAAMiC,aAAa,GAAG,MAAM;AAAA;;AAC1B,UAAMC,GAAG,GAAG3B,eAAe,GAAI,IAAD,iBAAIQ,MAAM,CAACoB,KAAX,kDAAI,cAAcR,EAAG,EAAnD;AAEA,UAAMS,GAAG,GAAG,EAAZ;;AAEA,UAAMC,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAMC,SAAS,GAAG,MAAM9B,GAAG,CAAC0B,GAAD,CAA3B;AACAjB,QAAAA,OAAO,CAAC;AACNC,UAAAA,KAAK,EAAEoB,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEpB;AADZ,SAAD,CAAP;AAGAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AAED,OAPD,CAOE,OAAOmB,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAnB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KAZD;;AAcAiB,IAAAA,OAAO;AAGR,GAtBD;;AAwBAtC,EAAAA,SAAS,CAACkC,aAAD,EAAgB,EAAhB,CAAT;AAEAlC,EAAAA,SAAS,CAAC,MAAM;AACd0C,IAAAA,MAAM,CAACC,IAAP,CAAYjB,KAAZ,EAAmBkB,GAAnB,CAAuBC,CAAC,IAAI;AAAA;;AAC1BZ,MAAAA,UAAU,CAACa,OAAX,CAAoB,WAAD,YAAWpB,KAAK,CAACmB,CAAD,CAAhB,6CAAW,SAAUjB,EAAG,EAA3C,IAAgD,KAAhD,CAD0B,CAE1B;AACA;AACA;AACA;AACD,KAND;AAQAa,IAAAA,OAAO,CAACM,GAAR,CAAY,YAAZ,EAA0Bd,UAAU,CAACa,OAArC;AACD,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAME,iBAAiB,GAAG,MAAM;AAC9B,QAAIxB,kBAAJ,EAAwB,oBACtB,QAAC,aAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,aAAa,EAAE;AAAEyB,QAAAA,YAAY,EAAEhC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE;AAAtB,OAHjB;AAIE,MAAA,UAAU,EAAEK,kBAJd;AAKE,MAAA,aAAa,EAAEC,qBALjB;AAME,MAAA,SAAS,EAAES;AANb;AAAA;AAAA;AAAA;AAAA,YADsB;AAWxB,wBAAO,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAbD;;AAeA,QAAMgB,iBAAiB,GAAIC,KAAD,IAAW,CACnC;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,IAAI,EAAC,gBAAV;AAAA,eACGC,IAAI,CAACC,SAAL,CAAetB,YAAf,CADH,eAEE,QAAC,cAAD;AACE,MAAA,KAAK,EAAE,CAAAd,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,KAAN,KAAe,YADxB;AAEE,MAAA,OAAO,EAAEsB,OAAO,CAACM,GAFnB;AAGE,MAAA,QAAQ,EAAE,MAAMtB,qBAAqB,CAAC,IAAD,CAHvC;AAIE,MAAA,QAAQ,EAAEuB,iBAAiB;AAJ7B;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,UAAU,EAAC,SAAvC;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,OAAO,eACL,QAAC,QAAD;AACE,UAAA,OAAO,EAAE,KADX;AAEE,UAAA,QAAQ,EAAEE,iBAFZ;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAQE,QAAA,KAAK,EAAC;AARR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzGD;;AA2GA,eAAepC,cAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\"\nimport styles from './styles'\nimport ActivityHeader from '../../../components/activity-header';\nimport ActivityPopup from '../../activityPopup';\nimport { ACTIVITY_GROUPS } from '../../../constant/api';\nimport { get } from '../../../api/API';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles(styles)\n\nconst DetailActivity = () => {\n  const cs = useStyles()\n  const router = useRouter()\n\n  const [data, setData] = useState({ title: '' })\n  const [loading, setLoading] = useState(false);\n  const [addActivityDialog, setAddActivityDialog] = useState(false);\n  const [editActivityDialog, setEditActivityDialog] = useState(false);\n\n  const [items, setItems] = useState([\n    {\n      id: '1',\n      name: 'Telur Ayam',\n      priority: '1'\n    },\n    {\n      id: '2',\n      name: 'Beras 5kg',\n      priority: '1'\n    },\n  ])\n  const [checkedState, setCheckedState] = React.useState({});\n  const checkedRef = useRef({})\n\n  const fetchDataById = () => {\n    const url = ACTIVITY_GROUPS + `/${router.query?.id}`\n\n    const obj = {}\n\n    const onFetch = async () => {\n      try {\n        const responses = await get(url)\n        setData({\n          title: responses?.title\n        })\n        setLoading(false)\n\n      } catch (error) {\n        console.error(error)\n        setLoading(true)\n      }\n    }\n\n    onFetch()\n\n\n  }\n\n  useEffect(fetchDataById, []);\n\n  useEffect(() => {\n    Object.keys(items).map(v => {\n      checkedRef.current[`checked_${items[v]?.id}`] = false\n      // setCheckedState({\n      //   ...checkedState,\n      //   : false\n      // })\n    })\n\n    console.log('checkedRef', checkedRef.current)\n  }, [])\n\n  const renderChildDialog = () => {\n    if (editActivityDialog) return (\n      <ActivityPopup\n        type=\"edit\"\n        title=\"Edit Activity\"\n        initialValues={{ activityName: data?.title }}\n        openDialog={editActivityDialog}\n        setOpenDialog={setEditActivityDialog}\n        onRefetch={fetchDataById}\n      />\n    )\n\n    return <React.Fragment />\n  }\n\n  const handleCheckChange = (event) => {\n    // setCheckedState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <div role=\"detailActivity\">\n      {JSON.stringify(checkedState)}\n      <ActivityHeader\n        title={data?.title || \"Loading...\"}\n        onClick={console.log}\n        onUpdate={() => setEditActivityDialog(true)}\n        children={renderChildDialog()}\n      />\n\n      <Grid container spacing={3} alignItems=\"stretch\">\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={false}\n              onChange={handleCheckChange}\n              name=\"checkedF\"\n            />\n          }\n          label=\"Telur Ayam\"\n        />\n      </Grid>\n    </div>\n  )\n}\n\nexport default DetailActivity"]},"metadata":{},"sourceType":"module"}