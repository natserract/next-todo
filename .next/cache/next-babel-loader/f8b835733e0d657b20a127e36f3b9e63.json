{"ast":null,"code":"import { createContext, useCallback, useMemo, useState, createElement, useContext } from 'react';\nconst DataCtx = /*#__PURE__*/createContext(undefined);\nexport const useData = () => useContext(DataCtx); // Reusable component for {activity header}, \n// need to refetch data on children\n// After insert new data, so that's why i need \n// context for wrapping this section\n// No complicated, just simple structure, fetch <-> replaced\n\nexport const DataProvider = ({\n  children\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    name: '',\n    items: []\n  });\n  const setValue = useCallback(values => {\n    if (!values) throw new TypeError();\n    setData(values);\n  }, []);\n  const value = useMemo(() => [loading, setLoading, data, setValue], [loading, setLoading, data, setValue]);\n  return /*#__PURE__*/createElement(DataCtx.Provider, {\n    value\n  }, children);\n};\nexport const AllContextProvider = ({\n  children\n}) => /*#__PURE__*/createElement(DataProvider, null, children);","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/store/configureStore.tsx"],"names":["createContext","useCallback","useMemo","useState","createElement","useContext","DataCtx","undefined","useData","DataProvider","children","loading","setLoading","data","setData","name","items","setValue","values","TypeError","value","Provider","AllContextProvider"],"mappings":"AACA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,OAArC,EAA8CC,QAA9C,EAAwDC,aAAxD,EAAuEC,UAAvE,QAA2H,OAA3H;AAKA,MAAMC,OAAO,gBAAGN,aAAa,CAEbO,SAFa,CAA7B;AAIA,OAAO,MAAMC,OAAO,GAAG,MAAMH,UAAU,CAACC,OAAD,CAAhC,C,CAOP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAiB;AAC/CY,IAAAA,IAAI,EAAE,EADyC;AAE/CC,IAAAA,KAAK,EAAE;AAFwC,GAAjB,CAAhC;AAKA,QAAMC,QAAQ,GAAGhB,WAAW,CAACiB,MAAM,IAAI;AACrC,QAAI,CAACA,MAAL,EAAa,MAAM,IAAIC,SAAJ,EAAN;AACbL,IAAAA,OAAO,CAACI,MAAD,CAAP;AACD,GAH2B,EAGzB,EAHyB,CAA5B;AAKA,QAAME,KAAK,GAAGlB,OAAO,CAAC,MAAM,CAC1BS,OAD0B,EACjBC,UADiB,EACLC,IADK,EACCI,QADD,CAAP,EAEnB,CACEN,OADF,EAEEC,UAFF,EAGEC,IAHF,EAIEI,QAJF,CAFmB,CAArB;AASA,sBAAOb,aAAa,CAACE,OAAO,CAACe,QAAT,EAAmB;AAAED,IAAAA;AAAF,GAAnB,EAA8BV,QAA9B,CAApB;AACD,CAtBM;AAwBP,OAAO,MAAMY,kBAAkB,GAAG,CAAC;AAAEZ,EAAAA;AAAF,CAAD,kBAAkBN,aAAa,CAC/DK,YAD+D,EAE/D,IAF+D,EAG/DC,QAH+D,CAA1D","sourcesContent":["\nimport { createContext, useCallback, useMemo, useState, createElement, useContext, useRef, Dispatch, SetStateAction } from 'react'\nimport { ActivityFields } from './State'\n\ntype Context<T> = T | (T | ((a: T) => void))[]\n\nconst DataCtx = createContext<Context<\n  boolean | ActivityFields | Dispatch<SetStateAction<boolean>\n>> | undefined>(undefined)\n\nexport const useData = () => useContext(DataCtx) as [\n  boolean,\n  Function,\n  ActivityFields, \n  Function\n]\n\n// Reusable component for {activity header}, \n// need to refetch data on children\n// After insert new data, so that's why i need \n// context for wrapping this section\n// No complicated, just simple structure, fetch <-> replaced\nexport const DataProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState<ActivityFields>({\n    name: '',\n    items: []\n  })\n\n  const setValue = useCallback(values => {\n    if (!values) throw new TypeError()\n    setData(values)\n  }, [])\n\n  const value = useMemo(() => [\n    loading, setLoading, data, setValue], \n    [\n      loading, \n      setLoading, \n      data, \n      setValue]\n  )\n\n  return createElement(DataCtx.Provider, { value }, children)\n}\n\nexport const AllContextProvider = ({ children }) => createElement(\n  DataProvider,\n  null,\n  children,\n)\n"]},"metadata":{},"sourceType":"module"}