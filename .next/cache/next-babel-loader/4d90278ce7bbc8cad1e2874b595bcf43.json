{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { rootReducer } from './reducers/index';\nexport default function configureStore(initialState) {\n  let store;\n  const isServer = true;\n\n  if (isServer) {\n    store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware()));\n  } else {\n    // Persist Configs\n    // We need it only on client side\n    const storage = require('redux-persist/lib/storage').default;\n\n    const persistConfig = {\n      key: 'root',\n      storage\n    };\n    store = createStore(persistReducer(persistConfig, rootReducer), initialState, composeWithDevTools(applyMiddleware()));\n    store.__PERSISTOR = persistStore(store);\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/store/configureStore.ts"],"names":["applyMiddleware","createStore","composeWithDevTools","persistStore","persistReducer","rootReducer","configureStore","initialState","store","isServer","storage","require","default","persistConfig","key","__PERSISTOR"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA2D,OAA3D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AAEA,SAAmBC,WAAnB,QAAsC,kBAAtC;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAxB,EAAgD;AAC7D,MAAIC,KAAJ;AACA,QAAMC,QAAQ,OAAd;;AAEA,MAAIA,QAAJ,EAAc;AACZD,IAAAA,KAAK,GAAGP,WAAW,CAACI,WAAD,EAAcE,YAAd,EAA4BL,mBAAmB,CAACF,eAAe,EAAhB,CAA/C,CAAnB;AACD,GAFD,MAEO;AACL;AACA;AACA,UAAMU,OAAO,GAAGC,OAAO,CAAC,2BAAD,CAAP,CAAqCC,OAArD;;AAEA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,GAAG,EAAE,MADe;AAEpBJ,MAAAA;AAFoB,KAAtB;AAKAF,IAAAA,KAAK,GAAGP,WAAW,CAACG,cAAc,CAACS,aAAD,EAAgBR,WAAhB,CAAf,EAA6CE,YAA7C,EAA2DL,mBAAmB,CAACF,eAAe,EAAhB,CAA9E,CAAnB;AACAQ,IAAAA,KAAK,CAACO,WAAN,GAAoBZ,YAAY,CAACK,KAAD,CAAhC;AACD;;AAED,SAAOA,KAAP;AACD","sourcesContent":["import { applyMiddleware, createStore, StoreCreator } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\n\nimport { AppState, rootReducer } from './reducers/index';\n\nexport default function configureStore(initialState: AppState) {\n  let store;\n  const isServer = typeof window === 'undefined';\n\n  if (isServer) {\n    store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware()))\n  } else {\n    // Persist Configs\n    // We need it only on client side\n    const storage = require('redux-persist/lib/storage').default;\n\n    const persistConfig = {\n      key: 'root',\n      storage\n    };\n\n    store = createStore(persistReducer(persistConfig, rootReducer), initialState, composeWithDevTools(applyMiddleware()));\n    store.__PERSISTOR = persistStore(store);\n  }\n  \n  return store\n}\n"]},"metadata":{},"sourceType":"module"}