{"ast":null,"code":"export const toStrictLower = str => {\n  return str.replace(/\\s/g, '-').toLowerCase();\n};\nexport const toCamelCase = str => {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n    return word.toUpperCase();\n  }).replace(/\\s+/g, ' ');\n};\nexport const normalizeStr = str => {\n  let newStr = str.replace('-', ' ');\n  return toCamelCase(newStr);\n};\nexport const generateRandomNum = () => {\n  return Math.floor(Math.random() * (1 + 200 - 1));\n};\nexport const mappingStatus = status => {\n  switch (status) {\n    case '1':\n      {\n        return 'open';\n      }\n\n    case '2':\n      {\n        return 'overdue';\n      }\n\n    case '3':\n      {\n        return 'done';\n      }\n\n    default:\n      {\n        return 'status not found';\n      }\n  }\n};\nexport const mappingColorStatus = status => {\n  switch (status) {\n    case '1':\n      {\n        return '#C4C4C4';\n      }\n\n    case '2':\n      {\n        return '#C4C4C4';\n      }\n\n    case '3':\n      {\n        return '#5440D1';\n      }\n\n    default:\n      {\n        return 'transparent';\n      }\n  }\n};\nexport const parseDate = date => {\n  const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];\n  const newDate = new Date(date);\n  const day = newDate.getDay();\n  const month = months[newDate.getMonth()];\n  const year = newDate.getFullYear();\n  return `${day} ${month} ${year}` || 'Date not valid';\n};","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/utils/utils.ts"],"names":["toStrictLower","str","replace","toLowerCase","toCamelCase","word","index","toUpperCase","normalizeStr","newStr","generateRandomNum","Math","floor","random","mappingStatus","status","mappingColorStatus","parseDate","date","months","newDate","Date","day","getDay","month","getMonth","year","getFullYear"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,GAAD,IAAiB;AAC5C,SAAOA,GAAG,CAACC,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,EAAwBC,WAAxB,EAAP;AACD,CAFM;AAIP,OAAO,MAAMC,WAAW,GAAIH,GAAD,IAAS;AAClC,SAAOA,GAAG,CAACC,OAAJ,CAAY,qBAAZ,EAAmC,UAASG,IAAT,EAAeC,KAAf,EAAsB;AAC9D,WAAOD,IAAI,CAACE,WAAL,EAAP;AACD,GAFM,EAEJL,OAFI,CAEI,MAFJ,EAEY,GAFZ,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMM,YAAY,GAAIP,GAAD,IAAiB;AAC3C,MAAIQ,MAAM,GAAGR,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAb;AACA,SAAOE,WAAW,CAACK,MAAD,CAAlB;AACD,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,SAAOC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,MAAkB,IAAI,GAAJ,GAAU,CAA5B,CAAZ,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAoB;AAC/C,UAAQA,MAAR;AACE,SAAK,GAAL;AAAU;AACR,eAAO,MAAP;AACD;;AACD,SAAK,GAAL;AAAU;AACR,eAAO,SAAP;AACD;;AACD,SAAK,GAAL;AAAU;AACR,eAAO,MAAP;AACD;;AACD;AAAS;AACP,eAAO,kBAAP;AACD;AAZH;AAcD,CAfM;AAiBP,OAAO,MAAMC,kBAAkB,GAAID,MAAD,IAAoB;AACpD,UAAQA,MAAR;AACE,SAAK,GAAL;AAAU;AACR,eAAO,SAAP;AACD;;AACD,SAAK,GAAL;AAAU;AACR,eAAO,SAAP;AACD;;AACD,SAAK,GAAL;AAAU;AACR,eAAO,SAAP;AACD;;AACD;AAAS;AACP,eAAO,aAAP;AACD;AAZH;AAcD,CAfM;AAkBP,OAAO,MAAME,SAAS,GAAIC,IAAD,IAAkB;AACzC,QAAMC,MAAM,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,EAOb,MAPa,EAQb,SARa,EASb,WATa,EAUb,SAVa,EAWb,UAXa,EAYb,UAZa,CAAf;AAeA,QAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAhB;AACA,QAAMI,GAAG,GAAGF,OAAO,CAACG,MAAR,EAAZ;AACA,QAAMC,KAAK,GAAGL,MAAM,CAACC,OAAO,CAACK,QAAR,EAAD,CAApB;AACA,QAAMC,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAb;AAEA,SAAQ,GAAEL,GAAI,IAAGE,KAAM,IAAGE,IAAK,EAAxB,IAA6B,gBAApC;AACD,CAtBM","sourcesContent":["export const toStrictLower = (str: string) => {\n  return str.replace(/\\s/g, '-').toLowerCase();\n}\n\nexport const toCamelCase = (str) => {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n    return word.toUpperCase();\n  }).replace(/\\s+/g, ' ');\n}\n\nexport const normalizeStr = (str: string) => {\n  let newStr = str.replace('-', ' ')\n  return toCamelCase(newStr);\n}\n\nexport const generateRandomNum = () => {\n  return Math.floor( Math.random() * ( 1 + 200 - 1 ) )\n}\n\nexport const mappingStatus = (status: string) => {\n  switch (status) {\n    case '1': {\n      return 'open'\n    }\n    case '2': {\n      return 'overdue'\n    }\n    case '3': {\n      return 'done'\n    }\n    default: {\n      return 'status not found'\n    }\n  }\n}\n\nexport const mappingColorStatus = (status: string) => {\n  switch (status) {\n    case '1': {\n      return '#C4C4C4'\n    }\n    case '2': {\n      return '#C4C4C4'\n    }\n    case '3': {\n      return '#5440D1'\n    }\n    default: {\n      return 'transparent'\n    }\n  }\n}\n\n\nexport const parseDate = (date: string) => {\n  const months = [\n    'Januari',\n    'Februari',\n    'Maret',\n    'April',\n    'Mei',\n    'Juni',\n    'Juli',\n    'Agustus',\n    'September',\n    'Oktober',\n    'November',\n    'Desember',\n  ]\n\n  const newDate = new Date(date);\n  const day = newDate.getDay()\n  const month = months[newDate.getMonth()]\n  const year = newDate.getFullYear()\n  \n  return `${day} ${month} ${year}` || 'Date not valid'\n};\n"]},"metadata":{},"sourceType":"module"}