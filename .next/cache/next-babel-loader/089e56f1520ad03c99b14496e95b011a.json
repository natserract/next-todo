{"ast":null,"code":"export var toStrictLower = function toStrictLower(str) {\n  return str.replace(/\\s/g, '-').toLowerCase();\n};\nexport var toCamelCase = function toCamelCase(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n    return word.toUpperCase();\n  }).replace(/\\s+/g, ' ');\n};\nexport var normalizeStr = function normalizeStr(str) {\n  var newStr = str.replace('-', ' ');\n  return toCamelCase(newStr);\n};\nexport var generateRandomNum = function generateRandomNum() {\n  return Math.floor(Math.random() * (1 + 200 - 1));\n};\nexport var mappingColorPriority = function mappingColorPriority(status) {\n  switch (status) {\n    case 'normal':\n      {\n        return '#00A790';\n      }\n\n    case 'very-high':\n      {\n        return '#ED4C5C';\n      }\n\n    case 'high':\n      {\n        return '#F8A541';\n      }\n\n    case 'low':\n      {\n        return '#428BC1';\n      }\n\n    case 'very-low':\n      {\n        return '#8942C1';\n      }\n\n    default:\n      {\n        return 'transparent';\n      }\n  }\n};\nexport var parseDate = function parseDate(date) {\n  var months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];\n  var newDate = new Date(date);\n  var day = newDate.getDay();\n  var month = months[newDate.getMonth()];\n  var year = newDate.getFullYear();\n  return \"\".concat(day, \" \").concat(month, \" \").concat(year) || 'Date not valid';\n};","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/utils/utils.ts"],"names":["toStrictLower","str","replace","toLowerCase","toCamelCase","word","index","toUpperCase","normalizeStr","newStr","generateRandomNum","Math","floor","random","mappingColorPriority","status","parseDate","date","months","newDate","Date","day","getDay","month","getMonth","year","getFullYear"],"mappings":"AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAiB;AAC5C,SAAOA,GAAG,CAACC,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,EAAwBC,WAAxB,EAAP;AACD,CAFM;AAIP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACH,GAAD,EAAS;AAClC,SAAOA,GAAG,CAACC,OAAJ,CAAY,qBAAZ,EAAmC,UAASG,IAAT,EAAeC,KAAf,EAAsB;AAC9D,WAAOD,IAAI,CAACE,WAAL,EAAP;AACD,GAFM,EAEJL,OAFI,CAEI,MAFJ,EAEY,GAFZ,CAAP;AAGD,CAJM;AAMP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACP,GAAD,EAAiB;AAC3C,MAAIQ,MAAM,GAAGR,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAb;AACA,SAAOE,WAAW,CAACK,MAAD,CAAlB;AACD,CAHM;AAKP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,SAAOC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,MAAkB,IAAI,GAAJ,GAAU,CAA5B,CAAZ,CAAP;AACD,CAFM;AAIP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,MAAD,EAAoB;AACtD,UAAQA,MAAR;AACE,SAAK,QAAL;AAAe;AACb,eAAO,SAAP;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB,eAAO,SAAP;AACD;;AACD,SAAK,MAAL;AAAa;AACX,eAAO,SAAP;AACD;;AACD,SAAK,KAAL;AAAY;AACV,eAAO,SAAP;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,eAAO,SAAP;AACD;;AACD;AAAS;AACP,eAAO,aAAP;AACD;AAlBH;AAoBD,CArBM;AAwBP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAkB;AACzC,MAAMC,MAAM,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,EAOb,MAPa,EAQb,SARa,EASb,WATa,EAUb,SAVa,EAWb,UAXa,EAYb,UAZa,CAAf;AAeA,MAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAhB;AACA,MAAMI,GAAG,GAAGF,OAAO,CAACG,MAAR,EAAZ;AACA,MAAMC,KAAK,GAAGL,MAAM,CAACC,OAAO,CAACK,QAAR,EAAD,CAApB;AACA,MAAMC,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAb;AAEA,SAAO,UAAGL,GAAH,cAAUE,KAAV,cAAmBE,IAAnB,KAA6B,gBAApC;AACD,CAtBM","sourcesContent":["export const toStrictLower = (str: string) => {\n  return str.replace(/\\s/g, '-').toLowerCase();\n}\n\nexport const toCamelCase = (str) => {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n    return word.toUpperCase();\n  }).replace(/\\s+/g, ' ');\n}\n\nexport const normalizeStr = (str: string) => {\n  let newStr = str.replace('-', ' ')\n  return toCamelCase(newStr);\n}\n\nexport const generateRandomNum = () => {\n  return Math.floor( Math.random() * ( 1 + 200 - 1 ) )\n}\n\nexport const mappingColorPriority = (status: string) => {\n  switch (status) {\n    case 'normal': {\n      return '#00A790'\n    }\n    case 'very-high': {\n      return '#ED4C5C'\n    }\n    case 'high': {\n      return '#F8A541'\n    }\n    case 'low': {\n      return '#428BC1'\n    }\n    case 'very-low': {\n      return '#8942C1'\n    }\n    default: {\n      return 'transparent'\n    }\n  }\n}\n\n\nexport const parseDate = (date: string) => {\n  const months = [\n    'Januari',\n    'Februari',\n    'Maret',\n    'April',\n    'Mei',\n    'Juni',\n    'Juli',\n    'Agustus',\n    'September',\n    'Oktober',\n    'November',\n    'Desember',\n  ]\n\n  const newDate = new Date(date);\n  const day = newDate.getDay()\n  const month = months[newDate.getMonth()]\n  const year = newDate.getFullYear()\n  \n  return `${day} ${month} ${year}` || 'Date not valid'\n};\n"]},"metadata":{},"sourceType":"module"}