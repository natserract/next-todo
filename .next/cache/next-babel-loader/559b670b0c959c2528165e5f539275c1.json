{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/card-items/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles';\nvar useStyles = makeStyles(styles);\n\nvar CardItems = function CardItems() {\n  _s();\n\n  var cs = useStyles();\n\n  var _useState = useState([{\n    id: '1',\n    name: 'Telur Ayam',\n    priority: '1'\n  }, {\n    id: '2',\n    name: 'Beras 5kg',\n    priority: '1'\n  }]),\n      items = _useState[0],\n      setItems = _useState[1];\n\n  var checkedRef = useRef({});\n\n  var _useState2 = useState({}),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1]; // Create initial state for checkBox\n\n\n  useEffect(function () {\n    Object.keys(items).map(function (v) {\n      checkedRef.current[\"checked_\".concat(items[v].id)] = false;\n    });\n    setCheckedState(_objectSpread({}, checkedRef.current));\n  }, []);\n\n  var handleCheckChange = function handleCheckChange(event) {\n    setCheckedState(_objectSpread(_objectSpread({}, checkedState), {}, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n\n  var renderItems = function renderItems() {\n    return items.map(function (v, idx) {\n      var key = \"checked_\".concat(v.id);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control:\n          /*#__PURE__*/\n          // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n          // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n          _jsxDEV(Checkbox, {\n            checked: !!checkedState[key],\n            onChange: handleCheckChange,\n            name: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, _this),\n          label: v.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  return renderItems();\n};\n\n_s(CardItems, \"om56AJmzO2rwdw1k5raBtSGCFu4=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardItems;\nexport default CardItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardItems\");","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/card-items/index.tsx"],"names":["useState","useRef","useEffect","makeStyles","Card","FormControlLabel","Checkbox","styles","useStyles","CardItems","cs","id","name","priority","items","setItems","checkedRef","checkedState","setCheckedState","Object","keys","map","v","current","handleCheckChange","event","target","checked","renderItems","idx","key"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAACI,MAAD,CAA5B;;AAEA,IAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB,MAAMC,EAAE,GAAGF,SAAS,EAApB;;AADsB,kBAGIR,QAAQ,CAAC,CACjC;AACEW,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GANiC,CAAD,CAHZ;AAAA,MAGfC,KAHe;AAAA,MAGRC,QAHQ;;AAetB,MAAMC,UAAU,GAAGf,MAAM,CAAC,EAAD,CAAzB;;AAfsB,mBAgBkBD,QAAQ,CAAC,EAAD,CAhB1B;AAAA,MAgBfiB,YAhBe;AAAA,MAgBDC,eAhBC,kBAkBtB;;;AACAhB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,GAAnB,CAAuB,UAAAC,CAAC,EAAI;AAC1BN,MAAAA,UAAU,CAACO,OAAX,mBAA8BT,KAAK,CAACQ,CAAD,CAAL,CAASX,EAAvC,KAA+C,KAA/C;AACD,KAFD;AAIAO,IAAAA,eAAe,mBAAMF,UAAU,CAACO,OAAjB,EAAf;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnCP,IAAAA,eAAe,iCAAMD,YAAN,2BAAqBQ,KAAK,CAACC,MAAN,CAAad,IAAlC,EAAyCa,KAAK,CAACC,MAAN,CAAaC,OAAtD,GAAf;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WAAOd,KAAK,CAACO,GAAN,CAAU,UAACC,CAAD,EAAIO,GAAJ,EAAY;AAC3B,UAAMC,GAAG,qBAAcR,CAAC,CAACX,EAAhB,CAAT;AAEA,0BACE,QAAC,IAAD;AAAA,+BACE,QAAC,gBAAD;AAEE,UAAA,OAAO;AAAA;AACL;AACA;AACA,kBAAC,QAAD;AACE,YAAA,OAAO,EAAE,CAAC,CAACM,YAAY,CAACa,GAAD,CADzB;AAEE,YAAA,QAAQ,EAAEN,iBAFZ;AAGE,YAAA,IAAI,EAAEM;AAHR;AAAA;AAAA;AAAA;AAAA,mBALJ;AAWE,UAAA,KAAK,EAAER,CAAC,CAACV;AAXX,WACOiB,GADP;AAAA;AAAA;AAAA;AAAA;AADF,SAAWC,GAAX;AAAA;AAAA;AAAA;AAAA,eADF;AAiBD,KApBM,CAAP;AAqBD,GAtBD;;AAwBA,SAAOF,WAAW,EAAlB;AACD,CAxDD;;GAAMnB,S;UACOD,S;;;KADPC,S;AA0DN,eAAeA,SAAf","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles'\n\nconst useStyles = makeStyles(styles)\n\nconst CardItems = () => {\n  const cs = useStyles()\n\n  const [items, setItems] = useState([\n    {\n      id: '1',\n      name: 'Telur Ayam',\n      priority: '1'\n    },\n    {\n      id: '2',\n      name: 'Beras 5kg',\n      priority: '1'\n    },\n  ])\n  const checkedRef = useRef({})\n  const [checkedState, setCheckedState] = useState({});\n\n  // Create initial state for checkBox\n  useEffect(() => {\n    Object.keys(items).map(v => {\n      checkedRef.current[`checked_${items[v].id}`] = false\n    })\n\n    setCheckedState({ ...checkedRef.current })\n  }, [])\n\n  const handleCheckChange = (event) => {\n    setCheckedState({ ...checkedState, [event.target.name]: event.target.checked });\n  };\n\n  const renderItems = () => {\n    return items.map((v, idx) => {\n      const key = `checked_${v.id}`\n\n      return (\n        <Card key={key}>\n          <FormControlLabel\n            key={idx}\n            control={\n              // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n              // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n              <Checkbox\n                checked={!!checkedState[key]}\n                onChange={handleCheckChange}\n                name={key}\n              />\n            }\n            label={v.name}\n          />\n        </Card>\n      )\n    })\n  }\n\n  return renderItems()\n}\n\nexport default CardItems"]},"metadata":{},"sourceType":"module"}