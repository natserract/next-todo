{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport { useRouter } from 'next/router';\nimport { ACTIVITY_GROUPS } from '../../../../constant/api';\nimport { get } from '../../../../api/API';\nimport EmptyItems from '../../../../components/empty-items';\nconst useStyles = makeStyles(styles);\n\nconst CardItems = () => {\n  const cs = useStyles();\n  const {\n    query\n  } = useRouter();\n  const checkedRef = useRef({});\n  const {\n    0: items,\n    1: setItems\n  } = useState([]);\n  const {\n    0: checkedState,\n    1: setCheckedState\n  } = useState({});\n  const fetchData = useCallback(() => {\n    const url = ACTIVITY_GROUPS + `/${query === null || query === void 0 ? void 0 : query.id}`;\n\n    const onFetch = async () => {\n      try {\n        const responses = await get(url);\n        setItems(responses === null || responses === void 0 ? void 0 : responses.todo_items);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    onFetch();\n  }, []);\n  useEffect(fetchData, []); // Create initial state for checkBox\n\n  useEffect(() => {\n    Object.keys(items).map(v => {\n      checkedRef.current[`checked_${items[v].id}`] = items[v]['is_active'] === '0';\n    });\n    setCheckedState(_objectSpread({}, checkedRef.current));\n  }, []);\n\n  const handleCheckChange = event => {\n    setCheckedState(_objectSpread(_objectSpread({}, checkedState), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  const handleDelete = () => {};\n\n  const renderItems = () => {\n    if (!items.length) return /*#__PURE__*/_jsxDEV(EmptyItems, {\n      path: \"../todo-empty-state.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }, this);\n    return items.map((v, idx) => {\n      const key = `checked_${v.id}`;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: cs.root,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"priority\",\n            className: cs.prior,\n            style: {\n              background: mappingColorPriority(v.priority)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: cs.formLabel,\n            control:\n            /*#__PURE__*/\n            // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n            // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n            _jsxDEV(Checkbox, {\n              color: \"primary\",\n              checked: !!checkedState[key],\n              onChange: handleCheckChange,\n              name: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this),\n            label: v.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleDelete,\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: renderItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n\nexport default CardItems;","map":{"version":3,"sources":["/Users/natserract/Projects/todolist-s/pages/activity/[slug]/todo-items/index.tsx"],"names":["useState","useRef","useEffect","useCallback","makeStyles","Card","FormControlLabel","Checkbox","styles","React","Grid","IconButton","DeleteOutlineIcon","mappingColorPriority","useRouter","ACTIVITY_GROUPS","get","EmptyItems","useStyles","CardItems","cs","query","checkedRef","items","setItems","checkedState","setCheckedState","fetchData","url","id","onFetch","responses","todo_items","error","console","Object","keys","map","v","current","handleCheckChange","event","target","name","checked","handleDelete","renderItems","length","idx","key","root","prior","background","priority","formLabel"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './styles'\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { mappingColorPriority } from '../../../../utils/utils';\nimport { useRouter } from 'next/router';\nimport { ACTIVITY_GROUPS } from '../../../../constant/api';\nimport { get } from '../../../../api/API';\nimport EmptyItems from '../../../../components/empty-items';\n\nconst useStyles = makeStyles(styles)\n\nconst CardItems = () => {\n  const cs = useStyles()\n  const { query } = useRouter()\n\n  const checkedRef = useRef({})\n  const [items, setItems] = useState([])\n  const [checkedState, setCheckedState] = useState({});\n\n  const fetchData = useCallback(() => {\n    const url = ACTIVITY_GROUPS + `/${query?.id}`\n\n    const onFetch = async () => {\n      try {\n        const responses = await get(url)\n        setItems(responses?.todo_items)\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    onFetch()\n  }, [])\n\n  useEffect(fetchData, [])\n\n  // Create initial state for checkBox\n  useEffect(() => {\n    Object.keys(items).map(v => {\n      checkedRef.current[`checked_${items[v].id}`] = items[v]['is_active'] === '0'\n    })\n\n    setCheckedState({ ...checkedRef.current })\n  }, [])\n\n  const handleCheckChange = (event) => {\n    setCheckedState({ ...checkedState, [event.target.name]: event.target.checked });\n  };\n\n  const handleDelete = () => {\n\n  }\n\n  const renderItems = () => {\n    if (!items.length) return <EmptyItems path=\"../todo-empty-state.png\" />\n\n    return items.map((v, idx) => {\n      const key = `checked_${v.id}`\n\n      return (\n        <Grid item sm={12} key={key}>\n          <Card className={cs.root}>\n            <span\n              role=\"priority\"\n              className={cs.prior}\n              style={{ background: mappingColorPriority(v.priority) }}\n            />\n\n            <FormControlLabel\n              className={cs.formLabel}\n              key={idx}\n              control={\n                // Issues: Component is changing the controlled value state of Select to be uncontrolled.\n                // Solve by: https://stackoverflow.com/questions/69259429/material-ui-a-component-is-changing-the-uncontrolled-checked-state-of-switchbas\n                <Checkbox\n                  color=\"primary\"\n                  checked={!!checkedState[key]}\n                  onChange={handleCheckChange}\n                  name={key}\n                />\n              }\n              label={v.name}\n            />\n\n            <IconButton onClick={handleDelete} aria-label=\"delete\">\n              <DeleteOutlineIcon />\n            </IconButton>\n          </Card>\n        </Grid>\n      )\n    })\n  }\n\n  return <React.Fragment children={renderItems()} />\n}\n\nexport default CardItems"]},"metadata":{},"sourceType":"module"}