{"version":3,"file":"DesktopDateTimePicker.js","sources":["../../src/DesktopDateTimePicker.tsx"],"sourcesContent":["import MuiDesktopDateTimePicker, {\n  DesktopDateTimePickerProps as MuiDesktopDateTimePickerProps,\n} from '@mui/lab/DesktopDateTimePicker';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { FieldProps, getIn } from 'formik';\nimport * as React from 'react';\nimport { createErrorHandler } from './errorHandler';\n\nexport interface DesktopDateTimePickerProps\n  extends FieldProps,\n    Omit<MuiDesktopDateTimePickerProps, 'name' | 'value' | 'error'> {\n  textField?: TextFieldProps;\n}\n\nexport function fieldToDesktopDateTimePicker({\n  field: { onChange: _onChange, ...field },\n  form: {\n    isSubmitting,\n    touched,\n    errors,\n    setFieldValue,\n    setFieldError,\n    setFieldTouched,\n  },\n  textField: { helperText, onBlur, ...textField } = {},\n  disabled,\n  label,\n  onChange,\n  onError,\n  renderInput,\n  ...props\n}: DesktopDateTimePickerProps): MuiDesktopDateTimePickerProps {\n  const fieldError = getIn(errors, field.name);\n  const showError = getIn(touched, field.name) && !!fieldError;\n\n  return {\n    renderInput:\n      renderInput ??\n      ((params) => (\n        <TextField\n          {...params}\n          error={showError}\n          helperText={showError ? fieldError : helperText}\n          label={label}\n          onBlur={\n            onBlur ??\n            function () {\n              setFieldTouched(field.name, true, true);\n            }\n          }\n          {...textField}\n        />\n      )),\n    disabled: disabled ?? isSubmitting,\n    onChange:\n      onChange ??\n      function (date) {\n        // Do not switch this order, otherwise you might cause a race condition\n        // See https://github.com/formium/formik/issues/2083#issuecomment-884831583\n        setFieldTouched(field.name, true, false);\n        setFieldValue(field.name, date, true);\n      },\n    onError:\n      onError ?? createErrorHandler(fieldError, field.name, setFieldError),\n    ...field,\n    ...props,\n  };\n}\n\nexport function DesktopDateTimePicker({\n  children,\n  ...props\n}: DesktopDateTimePickerProps) {\n  return (\n    <MuiDesktopDateTimePicker {...fieldToDesktopDateTimePicker(props)}>\n      {children}\n    </MuiDesktopDateTimePicker>\n  );\n}\n\nDesktopDateTimePicker.displayName = 'FormikMUIDesktopDateTimePicker';\n"],"names":[],"mappings":";;;;;;;SAcgB,4BAA4B,CAAC,EAiBhB;QAhB3B,aAAwC,aAAZ,MAAK,KAAK,cAA/B,YAAiC,CAAF,EACtC,YAOC,EANC,YAAY,kBAAA,EACZ,OAAO,aAAA,EACP,MAAM,YAAA,EACN,aAAa,mBAAA,EACb,aAAa,mBAAA,EACb,eAAe,qBAAA,EAEjB,iBAAoD,EAApD,qBAAkD,EAAE,KAAA,EAAvC,UAAU,gBAAA,EAAE,MAAM,YAAA,EAAK,SAAS,cAAlC,wBAAoC,CAAF,EAC7C,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,WAAW,iBAAA,EACR,KAAK,cAhBmC,yFAiB5C;IACC,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7C,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;IAE7D,2BACE,WAAW,EACT,WAAW,aAAX,WAAW,cAAX,WAAW,IACV,UAAC,MAAM,IAAK,QACX,oBAAC,SAAS,eACJ,MAAM,IACV,KAAK,EAAE,SAAS,EAChB,UAAU,EAAE,SAAS,GAAG,UAAU,GAAG,UAAU,EAC/C,KAAK,EAAE,KAAK,EACZ,MAAM,EACJ,MAAM,aAAN,MAAM,cAAN,MAAM,GACN;gBACE,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACzC,IAEC,SAAS,EACb,IACH,CAAC,EACJ,QAAQ,EAAE,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,YAAY,EAClC,QAAQ,EACN,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GACR,UAAU,IAAI;YAGZ,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACzC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SACvC,EACH,OAAO,EACL,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,kBAAkB,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,IACnE,KAAK,GACL,KAAK,EACR;AACJ,CAAC;SAEe,qBAAqB,CAAC,EAGT;IAF3B,IAAA,QAAQ,cAAA,EACL,KAAK,cAF4B,YAGrC,CADS;IAER,QACE,oBAAC,wBAAwB,eAAK,4BAA4B,CAAC,KAAK,CAAC,GAC9D,QAAQ,CACgB,EAC3B;AACJ,CAAC;AAED,qBAAqB,CAAC,WAAW,GAAG,gCAAgC;;;;"}